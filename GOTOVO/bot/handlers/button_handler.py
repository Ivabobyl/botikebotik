"""
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.
–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
"""

import logging
from typing import Dict, Any, Optional, Union, List

from telegram import Update, ReplyKeyboardMarkup, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from telegram.constants import ParseMode

from bot.config.config import load_config, is_admin
from bot.utils.keyboards import get_main_menu_keyboard, get_admin_keyboard
from bot.utils.helpers import check_admin, check_operator

logger = logging.getLogger(__name__)

def is_known_button(button_text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    
    Args:
        button_text: –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    return button_text in BUTTON_MAP

# –°–ª–æ–≤–∞—Ä—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
BUTTON_MAP = {
    # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": {
        "action": "main_menu",
        "clear_states": True,
        "description": "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ –º–µ—Å—Ç–∞ –±–æ—Ç–∞"
    },
    "üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å": {
        "action": "admin_panel",
        "requires_admin": True,
        "description": "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    },
    "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å": {
        "action": "admin_panel_back",
        "requires_admin": True,
        "description": "–í–æ–∑–≤—Ä–∞—Ç –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ø–æ–¥–º–µ–Ω—é"
    },
    "üîô –ù–∞–∑–∞–¥": {
        "action": "generic_back",
        "description": "–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"
    },
    
    # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    "üìù –ö—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç—É": {
        "action": "buy_crypto",
        "description": "–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"
    },
    "üìâ –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç—É": {
        "action": "sell_crypto",
        "description": "–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥–∞–∂–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"
    },
    "üë§ –ü—Ä–æ—Ñ–∏–ª—å": {
        "action": "profile",
        "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    },
    "‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": {
        "action": "info",
        "description": "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é"
    },
    "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏": {
        "action": "my_orders",
        "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–∏—á–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    },
    "üîç –ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞": {
        "action": "exchange_rates",
        "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞"
    },
    "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏": {
        "action": "active_orders",
        "requires_operator": True,
        "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ (–¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤)"
    },
    
    # –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–º–µ–Ω—é
    "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã": {
        "action": "manage_rates",
        "requires_admin": True,
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫—É—Ä—Å–æ–≤ –æ–±–º–µ–Ω–∞"
    },
    "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏": {
        "action": "manage_orders",
        "requires_admin": True,
        "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –∑–∞—è–≤–∫–∞–º–∏"
    },
    "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": {
        "action": "statistics",
        "requires_admin": True,
        "description": "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"
    },
    "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏": {
        "action": "manage_users",
        "requires_admin": True,
        "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–æ—Ç–∞"
    },
    "üì® –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É": {
        "action": "create_broadcast",
        "requires_admin": True,
        "description": "–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏"
    },
    "‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞": {
        "action": "bot_settings",
        "requires_admin": True,
        "description": "–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"
    },
    "üí¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏": {
        "action": "manage_texts",
        "requires_admin": True, 
        "description": "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"
    },
    "üîò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏": {
        "action": "manage_buttons",
        "requires_admin": True,
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ –±–æ—Ç–∞"
    },
    "üí± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏": {
        "action": "manage_currencies",
        "requires_admin": True,
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –≤–∞–ª—é—Ç"
    },
    "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è": {
        "action": "notifications",
        "requires_admin": True,
        "description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    }
}

async def process_button(update: Update, context: ContextTypes.DEFAULT_TYPE, button_text: str) -> bool:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram –±–æ—Ç–∞
        button_text: –¢–µ–∫—Å—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ
    button_info = BUTTON_MAP.get(button_text)
    if not button_info:
        # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        logger.info(f"–ö–Ω–æ–ø–∫–∞ '{button_text}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ BUTTON_MAP")
        return False
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
    if button_info.get("requires_admin", False) and not await check_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        )
        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—ã—Ç–∞–ª—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É '{button_text}', —Ç—Ä–µ–±—É—é—â—É—é –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return True
        
    if button_info.get("requires_operator", False) and not await check_operator(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        )
        return True
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if button_info.get("clear_states", False):
        if "admin_state" in context.user_data:
            del context.user_data["admin_state"]
        if "current_operation" in context.user_data:
            del context.user_data["current_operation"]
        if "order_data" in context.user_data:
            del context.user_data["order_data"]
            
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏—Ö –¥–µ–π—Å—Ç–≤–∏—è
    action = button_info.get("action", "")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    if action == "main_menu":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        is_admin_user = await check_admin(user_id)
        is_operator_user = await check_operator(user_id)
        keyboard = get_main_menu_keyboard(is_operator=is_operator_user, is_admin=is_admin_user)
        
        await update.message.reply_text(
            "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        return True
        
    elif action == "admin_panel" or action == "admin_panel_back":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        if "admin_state" in context.user_data:
            del context.user_data["admin_state"]
            
        keyboard = get_admin_keyboard()
        
        await update.message.reply_text(
            "üîê *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        return True
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif action == "buy_crypto":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–∫—É–ø–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config = load_config()
        currencies = config.get("currencies", {})
        crypto_currencies = [c for c in currencies.get("crypto", []) if c.get("enabled", True)]
        
        if not crypto_currencies:
            await update.message.reply_text(
                "‚ùå *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.*\n\n"
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –Ω–∏ –æ–¥–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_main_menu_keyboard(is_admin=await check_admin(user_id))
            )
            return True
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫—É—Ä—Å–∞—Ö
        rates_text = ""
        for crypto in crypto_currencies:
            code = crypto["code"]
            buy_rate_key = f"{code.lower()}_usd_buy"
            if buy_rate_key in rates:
                rates_text += f"‚Ä¢ 1 {code} = ${rates[buy_rate_key]} (–ø–æ–∫—É–ø–∫–∞)\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å—É–º–º
        keyboard_rows = []
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        predefined_amounts = ["0.1", "0.25", "0.5", "1"]
        
        for i in range(0, len(predefined_amounts), 2):
            row = []
            for amount in predefined_amounts[i:i+2]:
                for crypto in crypto_currencies:
                    row.append(f"{amount} {crypto['code']}")
            keyboard_rows.append(row)
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
        keyboard_rows.append(["üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞"])
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard_rows.append(["üîô –ù–∞–∑–∞–¥", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
        
        await update.message.reply_text(
            "üí∞ *–ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*\n\n"
            f"–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:\n{rates_text}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup(keyboard_rows, resize_keyboard=True)
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "buy_crypto"
        return True
        
    elif action == "sell_crypto":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config = load_config()
        currencies = config.get("currencies", {})
        crypto_currencies = [c for c in currencies.get("crypto", []) if c.get("enabled", True)]
        
        if not crypto_currencies:
            await update.message.reply_text(
                "‚ùå *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.*\n\n"
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –Ω–∏ –æ–¥–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_main_menu_keyboard(is_admin=await check_admin(user_id))
            )
            return True
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥–∞–∂–µ
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫—É—Ä—Å–∞—Ö
        rates_text = ""
        for crypto in crypto_currencies:
            code = crypto["code"]
            sell_rate_key = f"{code.lower()}_usd_sell"
            if sell_rate_key in rates:
                rates_text += f"‚Ä¢ 1 {code} = ${rates[sell_rate_key]} (–ø—Ä–æ–¥–∞–∂–∞)\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å—É–º–º
        keyboard_rows = []
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        predefined_amounts = ["0.1", "0.25", "0.5", "1"]
        
        for i in range(0, len(predefined_amounts), 2):
            row = []
            for amount in predefined_amounts[i:i+2]:
                for crypto in crypto_currencies:
                    row.append(f"{amount} {crypto['code']}")
            keyboard_rows.append(row)
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
        keyboard_rows.append(["üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞"])
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard_rows.append(["üîô –ù–∞–∑–∞–¥", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
        
        await update.message.reply_text(
            "üí± *–ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*\n\n"
            f"–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:\n{rates_text}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup(keyboard_rows, resize_keyboard=True)
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "sell_crypto"
        return True
    
    # –ï—Å–ª–∏ –∫–æ–¥ –¥–æ—à–µ–ª —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ,
    # –Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ—ë –Ω—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –∏–∑–≤–Ω–µ
    return True

def is_known_button(button_text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π.
    
    Args:
        button_text: –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    return button_text in BUTTON_MAP