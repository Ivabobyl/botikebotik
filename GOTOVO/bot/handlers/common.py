import logging
from typing import Dict, List, Any, Optional, Union, Tuple, cast

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    Application, CommandHandler, MessageHandler,
    CallbackQueryHandler, ContextTypes, filters
)
from telegram.constants import ParseMode

from bot.config.config import (
    load_config, save_config, get_current_rates, update_rates,
    is_admin, add_admin, remove_admin, get_referral_percentage,
    is_operator, add_operator, remove_operator, get_min_amount, set_min_amount,
    get_currencies, get_enabled_crypto_currencies, get_enabled_fiat_currencies,
    add_crypto_currency, add_fiat_currency, enable_disable_currency
)
from bot.database import get_custom_command, get_user, create_order, get_users
from bot.utils.keyboards import get_main_menu_keyboard, get_admin_keyboard
from bot.utils.helpers import check_admin
from bot.handlers.admin_currency import handle_admin_currency_message

logger = logging.getLogger(__name__)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Show help message with available commands"""
    help_text = (
        "ü§ñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/profile - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏."
    )
    
    await update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN)

async def handle_custom_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle custom commands created by admins"""
    # Extract command name (without / prefix)
    command_text = update.message.text[1:]  # Remove leading '/'
    
    # If command has parameters, only use the command part
    if ' ' in command_text:
        command_text = command_text.split(' ')[0]
    
    # Lookup command in database
    command = await get_custom_command(command_text)
    
    if not command:
        return  # Not a custom command, let other handlers process it
    
    # Create keyboard with buttons if defined
    keyboard = []
    buttons = command.get("buttons", [])
    
    if buttons:
        # Create rows with 1-2 buttons each
        row = []
        for i, button_text in enumerate(buttons):
            row.append(InlineKeyboardButton(button_text, callback_data=f"custom_button_{command_text}_{i}"))
            
            # Add 2 buttons per row
            if len(row) == 2 or i == len(buttons) - 1:
                keyboard.append(row)
                row = []
    
    reply_markup = InlineKeyboardMarkup(keyboard) if keyboard else None
    
    # Send response
    await update.message.reply_text(
        command["response"],
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

async def handle_custom_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle custom command button clicks"""
    await update.callback_query.answer()
    
    # Get button data
    query_data = update.callback_query.data
    parts = query_data.split('_')
    
    if len(parts) < 4:
        await update.callback_query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏.")
        return
    
    command_name = parts[2]
    button_index = int(parts[3])
    
    # Get command data
    command = await get_custom_command(command_name)
    
    if not command:
        await update.callback_query.edit_message_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    
    # Get button text
    buttons = command.get("buttons", [])
    
    if button_index >= len(buttons):
        await update.callback_query.edit_message_text("‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    
    button_text = buttons[button_index]
    
    # For now, just show the button text with a back button
    keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f"custom_back_{command_name}")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.callback_query.edit_message_text(
        f"*{button_text}*\n\n"
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {button_text}",
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

async def handle_custom_back(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle back button for custom commands"""
    await update.callback_query.answer()
    
    # Get command name
    query_data = update.callback_query.data
    command_name = query_data.split('_')[2]
    
    # Get command data
    command = await get_custom_command(command_name)
    
    if not command:
        await update.callback_query.edit_message_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return
    
    # Create keyboard with buttons if defined
    keyboard = []
    buttons = command.get("buttons", [])
    
    if buttons:
        # Create rows with 1-2 buttons each
        row = []
        for i, button_text in enumerate(buttons):
            row.append(InlineKeyboardButton(button_text, callback_data=f"custom_button_{command_name}_{i}"))
            
            # Add 2 buttons per row
            if len(row) == 2 or i == len(buttons) - 1:
                keyboard.append(row)
                row = []
    
    reply_markup = InlineKeyboardMarkup(keyboard) if keyboard else None
    
    # Send response
    await update.callback_query.edit_message_text(
        command["response"],
        reply_markup=reply_markup,
        parse_mode=ParseMode.MARKDOWN
    )

async def handle_main_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle main menu callback to return user to the main menu from anywhere"""
    await update.callback_query.answer()
    
    user_id = update.effective_user.id
    user_data = await get_user(user_id)
    if not user_data:
        user_data = {"role": "user"}
    
    is_operator_role = user_data.get("role") == "operator"
    is_admin_role = user_data.get("role") == "admin" or is_admin(user_id)
    
    keyboard = get_main_menu_keyboard(is_operator_role, is_admin_role)
    
    await update.callback_query.edit_message_text(
        "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=keyboard,
        parse_mode=ParseMode.MARKDOWN
    )

async def handle_commission_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∏—Å—Å–∏–π"""
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏–∏.",
            reply_markup=ReplyKeyboardMarkup([
                ["üí∞ –ö—É–ø–∏—Ç—å LTC", "üí± –ü—Ä–æ–¥–∞—Ç—å LTC"],
                ["üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üìä –ú–æ–∏ —Å–¥–µ–ª–∫–∏"],
                ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
            ], resize_keyboard=True)
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∏—Å—Å–∏–π
    rates = get_current_rates()
    
    await update.message.reply_text(
        "üìã *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∏—Å—Å–∏–π*\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞ –∏ –∫–æ–º–∏—Å—Å–∏–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∞–ª—é—Ç.\n\n"
        "*–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:*\n"
        f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
        f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
        f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
        f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
        f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=ReplyKeyboardMarkup([
            ["üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã"],
            ["üìà –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC", "üìâ –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC"],
            ["üíµ –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USD/RUB"],
            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
        ], resize_keyboard=True)
    )

async def handle_notification_settings_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.",
            reply_markup=ReplyKeyboardMarkup([
                ["üí∞ –ö—É–ø–∏—Ç—å LTC", "üí± –ü—Ä–æ–¥–∞—Ç—å LTC"],
                ["üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üìä –ú–æ–∏ —Å–¥–µ–ª–∫–∏"],
                ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
            ], resize_keyboard=True)
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    config = load_config()
    notification_settings = config.get("notifications", {
        "new_order_to_chat": True,
        "new_order_to_admin": True,
        "completed_order_to_chat": True,
        "system_messages_to_admin": True
    })
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã
    status_new_order_chat = "‚úÖ" if notification_settings.get("new_order_to_chat", True) else "‚ùå"
    status_new_order_admin = "‚úÖ" if notification_settings.get("new_order_to_admin", True) else "‚ùå"
    status_completed_order = "‚úÖ" if notification_settings.get("completed_order_to_chat", True) else "‚ùå"
    status_system_messages = "‚úÖ" if notification_settings.get("system_messages_to_admin", True) else "‚ùå"
    
    await update.message.reply_text(
        "üì± *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã.\n\n"
        "*–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:*\n"
        f"‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç: {status_new_order_chat}\n"
        f"‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∞–¥–º–∏–Ω—É: {status_new_order_admin}\n"
        f"‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç: {status_completed_order}\n"
        f"‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É: {status_system_messages}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=ReplyKeyboardMarkup([
            [f"{status_new_order_chat} –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç"],
            [f"{status_new_order_admin} –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∞–¥–º–∏–Ω—É"],
            [f"{status_completed_order} –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç"],
            [f"{status_system_messages} –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É"],
            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
        ], resize_keyboard=True)
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
    context.user_data["admin_state"] = "waiting_for_notification_toggle"

async def handle_notification_toggle(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    message_text = update.message.text
    
    if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        if "admin_state" in context.user_data:
            del context.user_data["admin_state"]
        await handle_admin_panel(update, context)
        return
        
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞
    try:
        config = load_config()
        if "notifications" not in config:
            config["notifications"] = {
                "new_order_to_chat": True,
                "new_order_to_admin": True,
                "completed_order_to_chat": True,
                "system_messages_to_admin": True
            }
            
        notification_settings = config["notifications"]
        
        setting_key = None
        new_status = None
        
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —ç–º–æ–¥–∑–∏ —Å—Ç–∞—Ç—É—Å–∞ (‚úÖ –∏–ª–∏ ‚ùå)
        clean_message = message_text
        if message_text.startswith("‚úÖ ") or message_text.startswith("‚ùå "):
            clean_message = message_text[2:]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –æ—á–∏—â–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        if clean_message == "–ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç":
            setting_key = "new_order_to_chat"
            current_status = notification_settings.get(setting_key, True)
            new_status = not current_status
        elif clean_message == "–ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∞–¥–º–∏–Ω—É":
            setting_key = "new_order_to_admin"
            current_status = notification_settings.get(setting_key, True)
            new_status = not current_status
        elif clean_message == "–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç":
            setting_key = "completed_order_to_chat"
            current_status = notification_settings.get(setting_key, True)
            new_status = not current_status
        elif clean_message == "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É":
            setting_key = "system_messages_to_admin"
            current_status = notification_settings.get(setting_key, True)
            new_status = not current_status
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
        return
    
    if setting_key and new_status is not None:
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        notification_settings[setting_key] = new_status
        config["notifications"] = notification_settings
        save_config(config)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        status_text = "–≤–∫–ª—é—á–µ–Ω—ã ‚úÖ" if new_status else "–æ—Ç–∫–ª—é—á–µ–Ω—ã ‚ùå"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
        status_new_order_chat = "‚úÖ" if notification_settings.get("new_order_to_chat", True) else "‚ùå"
        status_new_order_admin = "‚úÖ" if notification_settings.get("new_order_to_admin", True) else "‚ùå"
        status_completed_order = "‚úÖ" if notification_settings.get("completed_order_to_chat", True) else "‚ùå"
        status_system_messages = "‚úÖ" if notification_settings.get("system_messages_to_admin", True) else "‚ùå"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        setting_name = ""
        if setting_key == "new_order_to_chat":
            setting_name = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –≤ —á–∞—Ç"
        elif setting_key == "new_order_to_admin":
            setting_name = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –∞–¥–º–∏–Ω—É"
        elif setting_key == "completed_order_to_chat":
            setting_name = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö –≤ —á–∞—Ç"
        elif setting_key == "system_messages_to_admin":
            setting_name = "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        keyboard = ReplyKeyboardMarkup([
            [f"{status_new_order_chat} –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç"],
            [f"{status_new_order_admin} –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –∞–¥–º–∏–Ω—É"],
            [f"{status_completed_order} –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –≤ —á–∞—Ç"],
            [f"{status_system_messages} –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω—É"],
            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
        ], resize_keyboard=True)
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!*\n\n"
            f"*{setting_name}* —Ç–µ–ø–µ—Ä—å {status_text}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é:"
        )
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å Markdown-—Ä–∞–∑–º–µ—Ç–∫–æ–π
            await update.message.reply_text(
                message_text,
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=keyboard
            )
        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ Markdown –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å Markdown: {e}")
            await update.message.reply_text(
                message_text.replace('*', ''),
                reply_markup=keyboard
            )
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è
        await update.message.reply_text(
            "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True)
        )

async def handle_referral_system_button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É.",
            reply_markup=ReplyKeyboardMarkup([
                ["üí∞ –ö—É–ø–∏—Ç—å LTC", "üí± –ü—Ä–æ–¥–∞—Ç—å LTC"],
                ["üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üìä –ú–æ–∏ —Å–¥–µ–ª–∫–∏"],
                ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
            ], resize_keyboard=True)
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    config = load_config()
    levels = config["referral"]["levels"]
    
    levels_text = "\n".join([
        f"‚Ä¢ {level['min']}-{level['max'] if level['max'] != float('inf') else '‚àû'} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {level['percentage']}%"
        for level in levels
    ])
    
    await update.message.reply_text(
        "üîó *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã*\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.\n\n"
        "*–¢–µ–∫—É—â–∏–µ —É—Ä–æ–≤–Ω–∏:*\n"
        f"{levels_text}\n\n"
        "–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "`–º–∏–Ω1-–º–∞–∫—Å1:–ø—Ä–æ—Ü–µ–Ω—Ç1, –º–∏–Ω2-–º–∞–∫—Å2:–ø—Ä–æ—Ü–µ–Ω—Ç2, ...`\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: `1-10:10, 11-25:12.5, 26-50:15, 51-100:17.5, 101-inf:20`\n\n"
        "–ì–¥–µ `inf` –æ–∑–Ω–∞—á–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å.",
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=ReplyKeyboardMarkup([
            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
        ], resize_keyboard=True)
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞
    context.user_data["admin_state"] = "waiting_for_referral_settings"

async def handle_admin_panel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"""
    user_id = update.effective_user.id
    if not is_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.",
            reply_markup=ReplyKeyboardMarkup([
                ["üí∞ –ö—É–ø–∏—Ç—å LTC", "üí± –ü—Ä–æ–¥–∞—Ç—å LTC"],
                ["üë§ –ü—Ä–æ—Ñ–∏–ª—å", "üìä –ú–æ–∏ —Å–¥–µ–ª–∫–∏"],
                ["‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]
            ], resize_keyboard=True)
        )
        return
    
    await update.message.reply_text(
        "üë®‚Äçüíº *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        parse_mode=ParseMode.MARKDOWN,
        reply_markup=ReplyKeyboardMarkup([
            ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "üíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏"],
            ["üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π"],
            ["üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
            ["üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"],
            ["üîÑ –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
        ], resize_keyboard=True)
    )

async def update_referral_settings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    try:
        message_text = update.message.text.strip()
        
        # –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
            del context.user_data["admin_state"]
            await handle_admin_panel(update, context)
            return
        
        # –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
        levels = []
        for level_str in message_text.split(','):
            level_str = level_str.strip()
            if not level_str:
                continue
                
            range_part, percentage_part = level_str.split(':')
            range_part = range_part.strip()
            percentage_part = percentage_part.strip()
            
            min_max = range_part.split('-')
            min_val = int(min_max[0].strip())
            max_val = float('inf') if min_max[1].strip().lower() == 'inf' else int(min_max[1].strip())
            percentage = float(percentage_part)
            
            levels.append({
                "min": min_val,
                "max": max_val,
                "percentage": percentage
            })
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
        if not levels:
            raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω—ã —É—Ä–æ–≤–Ω–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—Ä–æ–≤–Ω–∏ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è
        sorted_levels = sorted(levels, key=lambda x: x["min"])
        for i in range(1, len(sorted_levels)):
            if sorted_levels[i]["min"] <= sorted_levels[i-1]["max"]:
                raise ValueError(f"–£—Ä–æ–≤–Ω–∏ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è: {sorted_levels[i-1]} –∏ {sorted_levels[i]}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config = load_config()
        config["referral"]["levels"] = sorted_levels
        save_config(config)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å —É—Ä–æ–≤–Ω—è–º–∏
        levels_text = "\n".join([
            f"‚Ä¢ {level['min']}-{level['max'] if level['max'] != float('inf') else '‚àû'} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {level['percentage']}%"
            for level in sorted_levels
        ])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await update.message.reply_text(
            "‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!*\n\n"
            "*–ù–æ–≤—ã–µ —É—Ä–æ–≤–Ω–∏:*\n"
            f"{levels_text}",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π"],
                ["üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                ["üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True)
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        del context.user_data["admin_state"]
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {e}")
        await update.message.reply_text(
            f"‚ùå *–û—à–∏–±–∫–∞!*\n\n"
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n"
            f"–§–æ—Ä–º–∞—Ç: `–º–∏–Ω1-–º–∞–∫—Å1:–ø—Ä–æ—Ü–µ–Ω—Ç1, –º–∏–Ω2-–º–∞–∫—Å2:–ø—Ä–æ—Ü–µ–Ω—Ç2, ...`\n\n"
            f"–ù–∞–ø—Ä–∏–º–µ—Ä: `1-10:10, 11-25:12.5, 26-50:15, 51-100:17.5, 101-inf:20`",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True)
        )

async def check_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    from bot.config import is_admin
    return is_admin(user_id)
    
async def check_operator(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"""
    from bot.database import get_user
    user = await get_user(user_id)
    return user is not None and user.get("role") == "operator"

async def handle_text_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ –∏–∑ ReplyKeyboardMarkup"""
    message_text = update.message.text
    user_id = update.effective_user.id
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message_text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        is_admin_user = await check_admin(user_id)
        is_operator_user = await check_operator(user_id)
        keyboard = get_main_menu_keyboard(is_operator=is_operator_user, is_admin=is_admin_user)
        
        await update.message.reply_text(
            "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        keys_to_clear = ["admin_state", "current_operation", "order_data"]
        for key in keys_to_clear:
            if key in context.user_data:
                del context.user_data[key]
        return
        
    elif message_text == "üìù –ö—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç—É":
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
        config = load_config()
        currencies = config.get("currencies", {})
        crypto_currencies = [c for c in currencies.get("crypto", []) if c.get("enabled", True)]
        
        if not crypto_currencies:
            await update.message.reply_text(
                "‚ùå *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.*\n\n"
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –Ω–∏ –æ–¥–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_main_menu_keyboard(is_admin=await check_admin(user_id))
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫—É—Ä—Å–∞—Ö
        rates_text = ""
        for crypto in crypto_currencies:
            code = crypto["code"]
            buy_rate_key = f"{code.lower()}_usd_buy"
            if buy_rate_key in rates:
                rates_text += f"‚Ä¢ 1 {code} = ${rates[buy_rate_key]} (–ø–æ–∫—É–ø–∫–∞)\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å—É–º–º
        keyboard_rows = []
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        predefined_amounts = ["0.1", "0.25", "0.5", "1"]
        
        for i in range(0, len(predefined_amounts), 2):
            row = []
            for amount in predefined_amounts[i:i+2]:
                for crypto in crypto_currencies:
                    row.append(f"{amount} {crypto['code']}")
            keyboard_rows.append(row)
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
        keyboard_rows.append(["üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞"])
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard_rows.append(["üîô –ù–∞–∑–∞–¥", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
        
        await update.message.reply_text(
            "üí∞ *–ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*\n\n"
            f"–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:\n{rates_text}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup(keyboard_rows, resize_keyboard=True)
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "buy_crypto"
        return
        
    elif message_text == "üìâ –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç—É":
        # –¢–∞–∫–æ–π –∂–µ –∫–æ–¥ –∫–∞–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –Ω–æ —Å –¥—Ä—É–≥–∏–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
        config = load_config()
        currencies = config.get("currencies", {})
        crypto_currencies = [c for c in currencies.get("crypto", []) if c.get("enabled", True)]
        
        if not crypto_currencies:
            await update.message.reply_text(
                "‚ùå *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.*\n\n"
                "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–∏–ª –Ω–∏ –æ–¥–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –¥–ª—è –æ–±–º–µ–Ω–∞.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_main_menu_keyboard(is_admin=await check_admin(user_id))
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥–∞–∂–µ
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫—É—Ä—Å–∞—Ö
        rates_text = ""
        for crypto in crypto_currencies:
            code = crypto["code"]
            sell_rate_key = f"{code.lower()}_usd_sell"
            if sell_rate_key in rates:
                rates_text += f"‚Ä¢ 1 {code} = ${rates[sell_rate_key]} (–ø—Ä–æ–¥–∞–∂–∞)\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ —Å—É–º–º
        keyboard_rows = []
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
        predefined_amounts = ["0.1", "0.25", "0.5", "1"]
        
        for i in range(0, len(predefined_amounts), 2):
            row = []
            for amount in predefined_amounts[i:i+2]:
                for crypto in crypto_currencies:
                    row.append(f"{amount} {crypto['code']}")
            keyboard_rows.append(row)
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
        keyboard_rows.append(["üí∞ –î—Ä—É–≥–∞—è —Å—É–º–º–∞"])
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        keyboard_rows.append(["üîô –ù–∞–∑–∞–¥", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
        
        await update.message.reply_text(
            "üí± *–ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*\n\n"
            f"–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:\n{rates_text}\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup(keyboard_rows, resize_keyboard=True)
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "sell_crypto"
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    user_is_admin = await check_admin(user_id)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫
    if message_text == "üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" and user_is_admin:
        await update.message.reply_text(
            "üîê *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=get_admin_keyboard(),
            parse_mode=ParseMode.MARKDOWN
        )
        return
            
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫
    from bot.handlers.admin_buttons import handle_admin_button
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–Ω–æ–ø–∫–æ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    if user_is_admin and message_text:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        handled = await handle_admin_button(update, context, message_text)
        if handled:
            return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    admin_state = context.user_data.get("admin_state", None)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏
    if admin_state in ["add_crypto", "add_fiat", "toggle_currency_status", "currency_management"] and user_is_admin:
        # –í—ã–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏
        await handle_admin_currency_message(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    elif message_text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" and user_is_admin:
        await handle_notification_settings_button(update, context)
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏"
    elif message_text == "üí± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏" and user_is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
        currencies = get_currencies()
        crypto_currencies = currencies.get("crypto", [])
        fiat_currencies = currencies.get("fiat", [])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–∞–ª—é—Ç
        crypto_text = "\n".join([
            f"‚Ä¢ {'‚úÖ' if c.get('enabled', True) else '‚ùå'} {c['code']} - {c['name']}" 
            for c in crypto_currencies
        ])
        
        fiat_text = "\n".join([
            f"‚Ä¢ {'‚úÖ' if c.get('enabled', True) else '‚ùå'} {c['code']} - {c['name']} ({c.get('symbol', '')})" 
            for c in fiat_currencies
        ])
        
        await update.message.reply_text(
            f"üí± *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏*\n\n"
            f"*–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:*\n{crypto_text}\n\n"
            f"*–§–∏–∞—Ç–Ω—ã–µ –≤–∞–ª—é—Ç—ã:*\n{fiat_text}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É", "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–∞—Ç–Ω—É—é –≤–∞–ª—é—Ç—É"],
                ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞–ª—é—Ç—ã"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "currency_management"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏"
    elif message_text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É" and is_admin:
        await update.message.reply_text(
            "‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`–ö–û–î –ù–∞–∑–≤–∞–Ω–∏–µ`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `BTC Bitcoin`",
            reply_markup=ReplyKeyboardMarkup([
                ["üîô –ù–∞–∑–∞–¥ –∫ –≤–∞–ª—é—Ç–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "add_crypto"
        return
    
    elif message_text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–∞—Ç–Ω—É—é –≤–∞–ª—é—Ç—É" and is_admin:
        await update.message.reply_text(
            "‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ–∏–∞—Ç–Ω–æ–π –≤–∞–ª—é—Ç—ã*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥, –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`–ö–û–î –ù–∞–∑–≤–∞–Ω–∏–µ –°–∏–º–≤–æ–ª`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `UAH –ì—Ä–∏–≤–Ω–∞ ‚Ç¥`",
            reply_markup=ReplyKeyboardMarkup([
                ["üîô –ù–∞–∑–∞–¥ –∫ –≤–∞–ª—é—Ç–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "add_fiat"
        return
    
    elif message_text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞–ª—é—Ç—ã" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
        currencies = get_currencies()
        crypto_currencies = currencies.get("crypto", [])
        fiat_currencies = currencies.get("fiat", [])
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—Å–µ—Ö –≤–∞–ª—é—Ç
        keyboard = []
        for c in crypto_currencies:
            status = "‚úÖ" if c.get('enabled', True) else "‚ùå"
            keyboard.append([KeyboardButton(f"{status} CRYPTO:{c['code']} ({c['name']})")])
        
        for c in fiat_currencies:
            status = "‚úÖ" if c.get('enabled', True) else "‚ùå"
            keyboard.append([KeyboardButton(f"{status} FIAT:{c['code']} ({c['name']})")])
        
        keyboard.append([KeyboardButton("üîô –ù–∞–∑–∞–¥ –∫ –≤–∞–ª—é—Ç–∞–º")])
        
        await update.message.reply_text(
            "‚úèÔ∏è *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤–∞–ª—é—Ç—ã*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, —Å—Ç–∞—Ç—É—Å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\n"
            "‚úÖ - –≤–∞–ª—é—Ç–∞ –∞–∫—Ç–∏–≤–Ω–∞\n"
            "‚ùå - –≤–∞–ª—é—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "toggle_currency_status"
        return
    
    elif message_text == "üîô –ù–∞–∑–∞–¥ –∫ –≤–∞–ª—é—Ç–∞–º" and is_admin:
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
        currencies = get_currencies()
        crypto_currencies = currencies.get("crypto", [])
        fiat_currencies = currencies.get("fiat", [])
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–∞–ª—é—Ç
        crypto_text = "\n".join([
            f"‚Ä¢ {'‚úÖ' if c.get('enabled', True) else '‚ùå'} {c['code']} - {c['name']}" 
            for c in crypto_currencies
        ])
        
        fiat_text = "\n".join([
            f"‚Ä¢ {'‚úÖ' if c.get('enabled', True) else '‚ùå'} {c['code']} - {c['name']} ({c.get('symbol', '')})" 
            for c in fiat_currencies
        ])
        
        await update.message.reply_text(
            f"üí± *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–∞–º–∏*\n\n"
            f"*–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã:*\n{crypto_text}\n\n"
            f"*–§–∏–∞—Ç–Ω—ã–µ –≤–∞–ª—é—Ç—ã:*\n{fiat_text}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É", "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–∞—Ç–Ω—É—é –≤–∞–ª—é—Ç—É"],
                ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞–ª—é—Ç—ã"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "currency_management"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    elif message_text == "‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã" and is_admin:
        rates = get_current_rates()
        await update.message.reply_text(
            f"üí± *–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
            f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
            f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
            f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
            f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
            f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –∫—É—Ä—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["ü™ô –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "ü™ô –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                ["üí± –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üí± –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "select_rate_to_change"
        return
    
    elif message_text == "üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏" and is_admin:
        await update.message.reply_text(
            "üìù *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞—è–≤–æ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
            reply_markup=ReplyKeyboardMarkup([
                ["üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏", "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ"],
                ["‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", "‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    elif message_text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" and is_admin:
        await update.message.reply_text(
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
            reply_markup=ReplyKeyboardMarkup([
                ["üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫", "üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
                ["üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    elif message_text == "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" and is_admin:
        await update.message.reply_text(
            "üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["üë§ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "üß© –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"],
                ["üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    elif message_text == "üì® –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É" and is_admin:
        await update.message.reply_text(
            "üì® *–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏:",
            reply_markup=ReplyKeyboardMarkup([
                ["üì¢ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "üë• –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"],
                ["üí∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º", "üõí –° –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    elif message_text == "‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞" and is_admin:
        await update.message.reply_text(
            "‚ö° *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
            reply_markup=ReplyKeyboardMarkup([
                ["üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π"],
                ["üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                ["üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    elif message_text == "üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" and is_admin:
        min_amount = get_min_amount()
        await update.message.reply_text(
            f"üí∞ *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏*\n\n"
            f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: *{min_amount:.2f} PMR —Ä—É–±–ª–µ–π*\n\n"
            f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –≤ PMR —Ä—É–±–ª—è—Ö:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –û—Ç–º–µ–Ω–∞"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_min_amount"
        return
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –ø–æ–¥–º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    elif message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" and is_admin:
        keyboard = get_admin_keyboard()
        await update.message.reply_text(
            "üîê *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–¥–µ–ª–∞ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
    elif message_text == "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" and is_admin:
        await update.message.reply_text(
            "üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["üë§ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "üß© –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"],
                ["üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    elif message_text == "üë§ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" and is_admin:
        await update.message.reply_text(
            "üë§ *–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_user_id_search"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"
    elif message_text == "üß© –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å" and is_admin:
        await update.message.reply_text(
            "üß© *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_user_id_role"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
    elif message_text == "üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" and is_admin:
        await update.message.reply_text(
            "üí∞ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_user_id_balance"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"
    elif message_text == "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" and is_admin:
        await update.message.reply_text(
            "‚ùå *–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_user_id_block"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    elif message_text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" and is_admin:
        await update.message.reply_text(
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
            reply_markup=ReplyKeyboardMarkup([
                ["üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫", "üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
                ["üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≤ –ø–æ–¥–º–µ–Ω—é "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    elif message_text == "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∑–∞—è–≤–∫–∞–º
        active_orders = await get_active_orders()
        in_progress_orders = await get_in_progress_orders()
        completed_orders = await get_completed_orders()
        
        # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –ø—Ä–∏–±—ã–ª—å (—Å–ø—Ä–µ–¥)
        total_spread = 0
        for order in completed_orders:
            if order.get("spread"):
                total_spread += order.get("spread")
        
        await update.message.reply_text(
            "üìà *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫*\n\n"
            f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫: {len(active_orders)}\n"
            f"‚Ä¢ –ó–∞—è–≤–æ–∫ –≤ —Ä–∞–±–æ—Ç–µ: {len(in_progress_orders)}\n"
            f"‚Ä¢ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫: {len(completed_orders)}\n"
            f"‚Ä¢ –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å (—Å–ø—Ä–µ–¥): {total_spread:.2f} —Ä—É–±.\n\n",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –ø–æ–¥–º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    elif message_text == "üîÑ –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ" and is_admin:
        await update.message.reply_text(
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
            reply_markup=ReplyKeyboardMarkup([
                ["üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—è–≤–æ–∫", "üë• –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
                ["üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìÜ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–µ—Ä–∏–æ–¥–∞–º"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞" (–í–∞–ª—é—Ç—ã)
    elif message_text == "üí± –ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—É—Ä—Å—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await update.message.reply_text(
            "üí± *–ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞*\n\n"
            f"*–ü–æ–∫—É–ø–∫–∞ LTC:*\n"
            f"1 LTC = ${rates['ltc_usd_buy']:.2f}\n"
            f"1 LTC = ‚ÇΩ{rates['ltc_usd_buy'] * rates['usd_rub_buy']:.2f}\n\n"
            f"*–ü—Ä–æ–¥–∞–∂–∞ LTC:*\n"
            f"1 LTC = ${rates['ltc_usd_sell']:.2f}\n"
            f"1 LTC = ‚ÇΩ{rates['ltc_usd_sell'] * rates['usd_rub_sell']:.2f}\n\n"
            f"*–ö—É—Ä—Å USD/RUB:*\n"
            f"–ü–æ–∫—É–ø–∫–∞: 1 USD = ‚ÇΩ{rates['usd_rub_buy']:.2f}\n"
            f"–ü—Ä–æ–¥–∞–∂–∞: 1 USD = ‚ÇΩ{rates['usd_rub_sell']:.2f}",
            reply_markup=ReplyKeyboardMarkup([
                ["üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC", "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC"],
                ["üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USD/RUB"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC"
    elif message_text == "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC" and is_admin:
        rates = get_current_rates()
        await update.message.reply_text(
            "üìù *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ø–æ–∫—É–ø–∫–∏ LTC*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 LTC = ${rates['ltc_usd_buy']:.2f}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å:",
            reply_markup=ReplyKeyboardMarkup([
                ["+1%", "+5%", "-1%", "-5%"],
                ["üîÑ –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "edit_ltc_buy_rate"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC"
    elif message_text == "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC" and is_admin:
        rates = get_current_rates()
        await update.message.reply_text(
            "üìù *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –ø—Ä–æ–¥–∞–∂–∏ LTC*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 LTC = ${rates['ltc_usd_sell']:.2f}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å:",
            reply_markup=ReplyKeyboardMarkup([
                ["+1%", "+5%", "-1%", "-5%"],
                ["üîÑ –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "edit_ltc_sell_rate"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USD/RUB"
    elif message_text == "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USD/RUB" and is_admin:
        rates = get_current_rates()
        await update.message.reply_text(
            "üìù *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞ USD/RUB*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏: 1 USD = ‚ÇΩ{rates['usd_rub_buy']:.2f}\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏: 1 USD = ‚ÇΩ{rates['usd_rub_sell']:.2f}\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ USD/RUB:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "edit_usd_rub_buy_rate"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"
    elif message_text == "üîÑ –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—É—Ä—Å—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await update.message.reply_text(
            "üí± *–ö—É—Ä—Å—ã –æ–±–º–µ–Ω–∞*\n\n"
            f"*–ü–æ–∫—É–ø–∫–∞ LTC:*\n"
            f"1 LTC = ${rates['ltc_usd_buy']:.2f}\n"
            f"1 LTC = ‚ÇΩ{rates['ltc_usd_buy'] * rates['usd_rub_buy']:.2f}\n\n"
            f"*–ü—Ä–æ–¥–∞–∂–∞ LTC:*\n"
            f"1 LTC = ${rates['ltc_usd_sell']:.2f}\n"
            f"1 LTC = ‚ÇΩ{rates['ltc_usd_sell'] * rates['usd_rub_sell']:.2f}\n\n"
            f"*–ö—É—Ä—Å USD/RUB:*\n"
            f"–ü–æ–∫—É–ø–∫–∞: 1 USD = ‚ÇΩ{rates['usd_rub_buy']:.2f}\n"
            f"–ü—Ä–æ–¥–∞–∂–∞: 1 USD = ‚ÇΩ{rates['usd_rub_sell']:.2f}",
            reply_markup=ReplyKeyboardMarkup([
                ["üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC", "üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC"],
                ["üìù –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USD/RUB"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –¥–ª—è –∫—É—Ä—Å–æ–≤
    elif (message_text in ["+1%", "+5%", "-1%", "-5%"] and is_admin and 
          context.user_data.get("admin_state") in ["edit_ltc_buy_rate", "edit_ltc_sell_rate"]):
        
        state = context.user_data.get("admin_state")
        rates = get_current_rates()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –∫—É—Ä—Å –∏–∑–º–µ–Ω—è–µ–º
        if state == "edit_ltc_buy_rate":
            current_rate = rates["ltc_usd_buy"]
            rate_key = "ltc_usd_buy"
            rate_name = "–ø–æ–∫—É–ø–∫–∏ LTC"
        else:  # edit_ltc_sell_rate
            current_rate = rates["ltc_usd_sell"]
            rate_key = "ltc_usd_sell"
            rate_name = "–ø—Ä–æ–¥–∞–∂–∏ LTC"
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–Ω–æ–ø–∫–∏
        if message_text == "+1%":
            new_rate = current_rate * 1.01
        elif message_text == "+5%":
            new_rate = current_rate * 1.05
        elif message_text == "-1%":
            new_rate = current_rate * 0.99
        else:  # "-5%"
            new_rate = current_rate * 0.95
            
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å
        if rate_key == "ltc_usd_buy":
            update_rates(new_rate, rates["ltc_usd_sell"], rates["usd_rub_buy"], rates["usd_rub_sell"])
        else:
            update_rates(rates["ltc_usd_buy"], new_rate, rates["usd_rub_buy"], rates["usd_rub_sell"])
            
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—É—Ä—Å
        await update.message.reply_text(
            f"‚úÖ –ö—É—Ä—Å {rate_name} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n"
            f"–ë—ã–ª–æ: ${current_rate:.2f}\n"
            f"–°—Ç–∞–ª–æ: ${new_rate:.2f}\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å:",
            reply_markup=ReplyKeyboardMarkup([
                ["+1%", "+5%", "-1%", "-5%"],
                ["üîÑ –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏"
    elif message_text == "üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
        operators = await get_users_by_role("operator")
        
        operator_list = "–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n\n"
        if operators:
            for i, operator in enumerate(operators, 1):
                username = operator.get("username", "–ù–µ—Ç –∏–º–µ–Ω–∏")
                operator_list += f"{i}. {username} (ID: `{operator.get('user_id')}`)\n"
        else:
            operator_list += "–û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"
        
        await update.message.reply_text(
            f"üë®‚Äçüíº *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏*\n\n"
            f"{operator_list}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"
    elif message_text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞" and is_admin:
        await update.message.reply_text(
            "‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_operator_id"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"
    elif message_text == "‚ûñ –£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞" and is_admin:
        await update.message.reply_text(
            "‚ûñ *–£–¥–∞–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "waiting_for_operator_id_to_remove"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏"
    elif message_text == "üîÑ –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏" and is_admin:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
        operators = await get_users_by_role("operator")
        
        operator_list = "–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤:\n\n"
        if operators:
            for i, operator in enumerate(operators, 1):
                username = operator.get("username", "–ù–µ—Ç –∏–º–µ–Ω–∏")
                operator_list += f"{i}. {username} (ID: `{operator.get('user_id')}`)\n"
        else:
            operator_list += "–û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"
        
        await update.message.reply_text(
            f"üë®‚Äçüíº *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏*\n\n"
            f"{operator_list}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
    elif message_text == "üîÑ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        user_data = await get_user(user_id)
        if not user_data:
            user_data = {"role": "user"}
        
        is_operator = user_data.get("role") == "operator"
        is_admin = is_admin or user_data.get("role") == "admin"
        
        keyboard = get_main_menu_keyboard(is_operator, is_admin)
        await update.message.reply_text(
            "üîÑ *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        return
    elif message_text == "üíµ –ö—É–ø–∏—Ç—å LTC" or message_text == "üí∞ –ü—Ä–æ–¥–∞—Ç—å LTC":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏ LTC
        order_type = "buy" if message_text == "üíµ –ö—É–ø–∏—Ç—å LTC" else "sell"
        action_text = "–ø–æ–∫—É–ø–∫–∏" if order_type == "buy" else "–ø—Ä–æ–¥–∞–∂–∏"
        
        rates = get_current_rates()
        if order_type == "buy":
            rate_usd = rates["ltc_usd_buy"]
            rate_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
        else:
            rate_usd = rates["ltc_usd_sell"]
            rate_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
        
        await update.message.reply_text(
            f"üí∞ *–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ {action_text} LTC*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 LTC = ${rate_usd:.2f} (‚ÇΩ{rate_rub:.2f})\n\n"
            f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ LTC, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ {'–∫—É–ø–∏—Ç—å' if order_type == 'buy' else '–ø—Ä–æ–¥–∞—Ç—å'}:\n"
            f"–ù–∞–ø—Ä–∏–º–µ—Ä: `0.5` –∏–ª–∏ `1.25`",
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ –æ—Ä–¥–µ—Ä–∞
        context.user_data["create_order_type"] = order_type
        context.user_data["user_action"] = "waiting_for_order_amount"
        return
    
    elif message_text == "üìä –ö—É—Ä—Å—ã":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        ltc_buy_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
        ltc_sell_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
        
        await update.message.reply_text(
            f"üí± *–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞*\n\n"
            f"*Litecoin (LTC):*\n"
            f"‚Ä¢ –ü–æ–∫—É–ø–∫–∞: ${rates['ltc_usd_buy']:.2f} (‚ÇΩ{ltc_buy_rub:.2f})\n"
            f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞: ${rates['ltc_usd_sell']:.2f} (‚ÇΩ{ltc_sell_rub:.2f})\n\n"
            f"*–î–æ–ª–ª–∞—Ä –°–®–ê (USD):*\n"
            f"‚Ä¢ –ü–æ–∫—É–ø–∫–∞: ‚ÇΩ{rates['usd_rub_buy']:.2f}\n"
            f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞: ‚ÇΩ{rates['usd_rub_sell']:.2f}",
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    elif message_text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è
        user_data = await get_user(user_id)
        if not user_data:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /start
            await update.message.reply_text(
                "‚ùå –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
        username = user_data.get("username", f"user_{user_id}")
        balance = user_data.get("balance", 0)
        referrals_count = len(user_data.get("referrals", []))
        referral_link = f"https://t.me/your_crypto_exchange_bot?start={user_id}"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–¥–µ–ª–∫–∞–º
        buy_orders = user_data.get("buy_orders", 0)
        sell_orders = user_data.get("sell_orders", 0)
        total_orders = buy_orders + sell_orders
        total_volume = user_data.get("total_volume", 0)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü
        monthly_buy_orders = user_data.get("monthly_buy_orders", 0)
        monthly_sell_orders = user_data.get("monthly_sell_orders", 0)
        monthly_total_orders = monthly_buy_orders + monthly_sell_orders
        monthly_volume = user_data.get("monthly_volume", 0)
        
        # –°–∫–∏–¥–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        discount = user_data.get("discount", 0)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ
        profile_text = (
            f"üë§ *–ü—Ä–æ—Ñ–∏–ª—å* @{username} | {user_id}\n\n"
            f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
            f"üü¢ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {total_orders} —à—Ç.\n"
            f"üìà –°–¥–µ–ª–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É: {buy_orders} —à—Ç.\n"
            f"üìâ –°–¥–µ–ª–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: {sell_orders} —à—Ç.\n"
            f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–æ–∫: {total_volume:.2f} $\n\n"
            f"üìÖ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü:*\n"
            f"üü¢ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: {monthly_total_orders} —à—Ç.\n"
            f"üìà –°–¥–µ–ª–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É: {monthly_buy_orders} —à—Ç.\n"
            f"üìâ –°–¥–µ–ª–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: {monthly_sell_orders} —à—Ç.\n"
            f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–æ–∫: {monthly_volume:.2f} $\n\n"
            f"üí≤ *–í–∞—à–∞ —Å–∫–∏–¥–∫–∞:* {discount} %"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∫–∏–¥–∫–µ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ
        buttons = [
            [KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–¥–∫–µ")],
            [KeyboardButton("üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        await update.message.reply_text(profile_text, reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN)
        return
        
    elif message_text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–¥–∫–µ":
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö
        discount_text = (
            f"üí∞ *–°–∫–∏–¥–∫–∏ –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Å—è—á–Ω–æ–≥–æ –æ–±–æ—Ä–æ—Ç–∞ —Å–¥–µ–ª–æ–∫ –≤ $:*\n\n"
            f"‚Ä¢ 0 - 100 $: 0% —Å–∫–∏–¥–∫–∞! üéÅ\n"
            f"‚Ä¢ 100 - 500 $: 5% —Å–∫–∏–¥–∫–∞! üéÅ\n"
            f"‚Ä¢ 500 - 1000 $: 10% —Å–∫–∏–¥–∫–∞! üéÅ\n"
            f"‚Ä¢ 1000 - 3000 $: 15% —Å–∫–∏–¥–∫–∞! üéÅ\n"
            f"‚Ä¢ –û—Ç 3000 $ –∏ –≤—ã—à–µ: 20% —Å–∫–∏–¥–∫–∞! üî•\n\n"
            f"‚è≥ –ü–æ—Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ –≤—ã–≥–æ–¥–Ω—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏! –í–∞—à–∞ —Å–∫–∏–¥–∫–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü"
        )
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        buttons = [[KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        await update.message.reply_text(discount_text, reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN)
        return
        
    elif message_text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞":
        # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
        user_data = await get_user(user_id)
        if not user_data:
            user_data = {"username": f"user_{user_id}", "balance": 0, "referrals": []}
            
        referrals_count = len(user_data.get("referrals", []))
        earnings = user_data.get("referral_earnings", 0)
        referral_link = f"https://t.me/your_crypto_exchange_bot?start={user_id}"
        
        referral_text = (
            f"üëã *–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —Ç–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n\n"
            f"üìä *–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ª—é–¥–µ–π:* {referrals_count}\n\n"
            f"üí∞ *–û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫:* {earnings:.2f} USD\n\n"
            f"üí≤ *–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:* {user_data.get('balance', 0):.2f} USD\n\n"
            f"üîó *–¢–≤–æ—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:*\n"
            f"{referral_link}\n\n"
            f"–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ! üöÄ"
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        buttons = [
            [KeyboardButton("üíµ –ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–≤–æ–¥")],
            [KeyboardButton("‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?")],
            [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        # –ò–∑–±–µ–≥–∞–µ–º –æ—à–∏–±–æ–∫ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º markdown
        try:
            await update.message.reply_text(
                referral_text, 
                reply_markup=reply_markup, 
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {e}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            await update.message.reply_text(
                referral_text.replace('*', '').replace('_', ''), 
                reply_markup=reply_markup
            )
        return
        
    elif message_text == "‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?":
        # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        explanation_text = (
            "*–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞*\n\n"
            "–ù–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–º –æ–±–º–µ–Ω–µ, "
            "–æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º–æ–º –∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏. –°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å 20% –∫–æ–º–∏—Å—Å–∏–æ–Ω–Ω—ã—Ö "
            "–æ—Ç –∫–æ–º–∏—Å—Å–∏–∏ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –∑–∞ –≤—Å–µ —Å–¥–µ–ª–∫–∏.\n\n"
            "*–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:*\n"
            "1. –ü–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª–µ\n"
            "2. –î–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö\n"
            "3. –ü–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–∂–¥—É—é —Å–¥–µ–ª–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–∞\n"
            "4. –ó–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ —á–µ—Ä–µ–∑ –±–æ—Ç–∞\n\n"
            "*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n"
            "‚Ä¢ –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n"
            "‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥\n"
            "‚Ä¢ –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –≤—ã–ø–ª–∞—Ç—ã\n\n"
            "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!"
        )
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        buttons = [[KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        await update.message.reply_text(explanation_text, reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN)
        return
        
    elif message_text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ - –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ –µ—Å—Ç—å
        if "current_context" in context.user_data and context.user_data["current_context"] == "referral":
            # –ï—Å–ª–∏ –º—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–µ–π
            return await handle_text_buttons(update, context)
        else:
            # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            keyboard = get_main_menu_keyboard(is_admin=is_admin)
            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=keyboard
            )
            return
    
    elif message_text == "üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å—ã" and is_admin:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫—É—Ä—Å–æ–≤
        rates = get_current_rates()
        await update.message.reply_text(
            f"üí± *–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞*\n\n"
            f"*Litecoin (LTC):*\n"
            f"‚Ä¢ –ü–æ–∫—É–ø–∫–∞: ${rates['ltc_usd_buy']:.2f}\n"
            f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞: ${rates['ltc_usd_sell']:.2f}\n\n"
            f"*–î–æ–ª–ª–∞—Ä –°–®–ê (USD):*\n"
            f"‚Ä¢ –ü–æ–∫—É–ø–∫–∞: ‚ÇΩ{rates['usd_rub_buy']:.2f}\n"
            f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞: ‚ÇΩ{rates['usd_rub_sell']:.2f}\n\n"
            f"–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ 4 —á–∏—Å–ª–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            f"`ltc_usd_buy ltc_usd_sell usd_rub_buy usd_rub_sell`\n\n"
            f"–ù–∞–ø—Ä–∏–º–µ—Ä: `80 78 90 88`",
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∫—É—Ä—Å–æ–≤
        context.user_data["admin_action"] = "waiting_for_rates"
        return
        
    elif message_text == "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" and is_admin:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        await update.message.reply_text(
            "üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
            "–î–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`ID —Ä–æ–ª—å`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `12345678 operator`\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏:\n"
            "‚Ä¢ `user` - –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
            "‚Ä¢ `operator` - –æ–ø–µ—Ä–∞—Ç–æ—Ä\n"
            "‚Ä¢ `admin` - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Ä–æ–ª–∏
        context.user_data["admin_action"] = "waiting_for_user_role"
        return
        
    elif message_text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" and is_admin:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        await update.message.reply_text(
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n"
            "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞:\n"
            "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ...\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫: ...\n"
            "‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫: ...\n"
            "‚Ä¢ –û–±–æ—Ä–æ—Ç: ... LTC\n\n"
            "–î–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üì® –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É" and is_admin:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏
        await update.message.reply_text(
            "üì® *–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n"
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è Markdown-—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.",
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
        context.user_data["admin_action"] = "waiting_for_broadcast_text"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    elif message_text == "üë§ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" and is_admin:
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logging.info(f"–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message_text}")
        logging.info(f"–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {type(message_text)}")
        
        await update.message.reply_text(
            "üë§ *–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
            "_–ù–∞–ø—Ä–∏–º–µ—Ä: 123456789 –∏–ª–∏ @username_",
            reply_markup=ReplyKeyboardMarkup([
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ ID –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["admin_state"] = "waiting_for_user_id_search"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    elif message_text == "üß© –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å" and is_admin:
        await update.message.reply_text(
            "üß© *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ–≤—É—é —Ä–æ–ª—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`ID —Ä–æ–ª—å`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `123456789 operator`\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–æ–ª–∏:\n"
            "‚Ä¢ `user` - –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
            "‚Ä¢ `operator` - –æ–ø–µ—Ä–∞—Ç–æ—Ä\n"
            "‚Ä¢ `admin` - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
            reply_markup=ReplyKeyboardMarkup([
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ ID –∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["admin_state"] = "waiting_for_user_role_change"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    elif message_text == "üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" and is_admin:
        await update.message.reply_text(
            "üí∞ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—É–º–º—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`ID —Å—É–º–º–∞`\n\n"
            "–ü—Ä–∏–º–µ—Ä—ã:\n"
            "‚Ä¢ `123456789 +500` - –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ 500\n"
            "‚Ä¢ `123456789 -200` - —Å–ø–∏—Å–∞—Ç—å —Å –±–∞–ª–∞–Ω—Å–∞ 200",
            reply_markup=ReplyKeyboardMarkup([
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ ID –∏ —Å—É–º–º—ã
        context.user_data["admin_state"] = "waiting_for_balance_change"
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    elif message_text == "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" and is_admin:
        await update.message.reply_text(
            "‚ùå *–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:",
            reply_markup=ReplyKeyboardMarkup([
                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["admin_state"] = "waiting_for_user_block"
        return
        
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏ –∫—Ä–∏–ø—Ç—ã
    elif message_text == "üìù –ö—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç—É":
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö
        ltc_buy_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        buttons = [
            [KeyboardButton("0.1 LTC"), KeyboardButton("0.25 LTC"), KeyboardButton("0.5 LTC")],
            [KeyboardButton("1 LTC"), KeyboardButton("2 LTC"), KeyboardButton("5 LTC")],
            [KeyboardButton("–î—Ä—É–≥–∞—è —Å—É–º–º–∞")],
            [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        buy_message = (
            f"üìà *–ü–æ–∫—É–ø–∫–∞ Litecoin (LTC)*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: ${rates['ltc_usd_buy']:.2f} (‚âà {ltc_buy_rub:.2f} ‚ÇΩ)\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É.\n"
            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–∫—É–ø–∫–∏: 0.1 LTC"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "buy_ltc"
        
        await update.message.reply_text(
            buy_message,
            reply_markup=reply_markup, 
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üìâ –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç—É":
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö
        ltc_sell_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        buttons = [
            [KeyboardButton("0.1 LTC"), KeyboardButton("0.25 LTC"), KeyboardButton("0.5 LTC")],
            [KeyboardButton("1 LTC"), KeyboardButton("2 LTC"), KeyboardButton("5 LTC")],
            [KeyboardButton("–î—Ä—É–≥–∞—è —Å—É–º–º–∞")],
            [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        sell_message = (
            f"üìâ *–ü—Ä–æ–¥–∞–∂–∞ Litecoin (LTC)*\n\n"
            f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: ${rates['ltc_usd_sell']:.2f} (‚âà {ltc_sell_rub:.2f} ‚ÇΩ)\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Å—É–º–º—É.\n"
            f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏: 0.1 LTC"
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã
        context.user_data["current_operation"] = "sell_ltc"
        
        await update.message.reply_text(
            sell_message,
            reply_markup=reply_markup, 
            parse_mode=ParseMode.MARKDOWN
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É–Ω–∫—Ç–∞ "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
    elif message_text == "–î—Ä—É–≥–∞—è —Å—É–º–º–∞":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
        operation = context.user_data.get("current_operation", "")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        rates = get_current_rates()
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
        buttons = [
            [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        if operation == "buy_ltc":
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö
            ltc_buy_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            context.user_data["current_operation"] = "custom_buy_ltc"
            
            await update.message.reply_text(
                f"üìà *–ü–æ–∫—É–ø–∫–∞ Litecoin (LTC) - –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞*\n\n"
                f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: ${rates['ltc_usd_buy']:.2f} (‚âà {ltc_buy_rub:.2f} ‚ÇΩ)\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.75).\n"
                f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.1 LTC\n\n"
                f"*–ü—Ä–∏–º–µ—Ä—ã —Å—É–º–º:*\n"
                f"‚Ä¢ 0.1 LTC ‚âà {0.1 * ltc_buy_rub:.2f} ‚ÇΩ\n"
                f"‚Ä¢ 0.5 LTC ‚âà {0.5 * ltc_buy_rub:.2f} ‚ÇΩ\n"
                f"‚Ä¢ 1 LTC ‚âà {1 * ltc_buy_rub:.2f} ‚ÇΩ",
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            
        elif operation == "sell_ltc":
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö
            ltc_sell_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            context.user_data["current_operation"] = "custom_sell_ltc"
            
            await update.message.reply_text(
                f"üìâ *–ü—Ä–æ–¥–∞–∂–∞ Litecoin (LTC) - –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—É–º–º–∞*\n\n"
                f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: ${rates['ltc_usd_sell']:.2f} (‚âà {ltc_sell_rub:.2f} ‚ÇΩ)\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ LTC (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.75).\n"
                f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 0.1 LTC\n\n"
                f"*–ü—Ä–∏–º–µ—Ä—ã —Å—É–º–º:*\n"
                f"‚Ä¢ 0.1 LTC ‚âà {0.1 * ltc_sell_rub:.2f} ‚ÇΩ\n"
                f"‚Ä¢ 0.5 LTC ‚âà {0.5 * ltc_sell_rub:.2f} ‚ÇΩ\n"
                f"‚Ä¢ 1 LTC ‚âà {1 * ltc_sell_rub:.2f} ‚ÇΩ",
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
        
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
    elif (context.user_data.get("current_operation") == "custom_buy_ltc" or 
          context.user_data.get("current_operation") == "custom_sell_ltc"):
        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ
            ltc_amount = float(message_text.strip())
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É
            if ltc_amount < 0.1:
                await update.message.reply_text(
                    "‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏: 0.1 LTC.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω–µ–µ 0.1 LTC.",
                    parse_mode=ParseMode.MARKDOWN
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
            rates = get_current_rates()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
            operation = context.user_data.get("current_operation", "")
            real_operation = "buy_ltc" if operation == "custom_buy_ltc" else "sell_ltc"
            context.user_data["current_operation"] = real_operation
            
            # –î–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å—É–º–º–∞–º
            if real_operation == "buy_ltc":
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö –∏ –æ–±—â—É—é —Å—É–º–º—É
                ltc_buy_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
                total_rub = ltc_amount * ltc_buy_rub
                total_usd = ltc_amount * rates["ltc_usd_buy"]
                
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                buttons = [
                    [KeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É")],
                    [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
                ]
                reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
                context.user_data["order_data"] = {
                    "type": "buy",
                    "ltc_amount": ltc_amount,
                    "total_rub": total_rub,
                    "total_usd": total_usd,
                    "rate_used": rates["ltc_usd_buy"]
                }
                
                confirm_message = (
                    f"üîç *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏*\n\n"
                    f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∫—É–ø–∏—Ç—å *{ltc_amount} LTC*\n"
                    f"–ü–æ –∫—É—Ä—Å—É: ${rates['ltc_usd_buy']:.2f} (‚âà {ltc_buy_rub:.2f} ‚ÇΩ)\n\n"
                    f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:\n"
                    f"‚Ä¢ ${total_usd:.2f}\n"
                    f"‚Ä¢ {total_rub:.2f} ‚ÇΩ\n\n"
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø–æ–∫—É–ø–∫—É."
                )
                
                await update.message.reply_text(
                    confirm_message,
                    reply_markup=reply_markup,
                    parse_mode=ParseMode.MARKDOWN
                )
                return
                
            elif real_operation == "sell_ltc":
                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö –∏ –æ–±—â—É—é —Å—É–º–º—É
                ltc_sell_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
                total_rub = ltc_amount * ltc_sell_rub
                total_usd = ltc_amount * rates["ltc_usd_sell"]
                
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                buttons = [
                    [KeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É")],
                    [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
                ]
                reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
                context.user_data["order_data"] = {
                    "type": "sell",
                    "ltc_amount": ltc_amount,
                    "total_rub": total_rub,
                    "total_usd": total_usd,
                    "rate_used": rates["ltc_usd_sell"]
                }
                
                confirm_message = (
                    f"üîç *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏*\n\n"
                    f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–¥–∞—Ç—å *{ltc_amount} LTC*\n"
                    f"–ü–æ –∫—É—Ä—Å—É: ${rates['ltc_usd_sell']:.2f} (‚âà {ltc_sell_rub:.2f} ‚ÇΩ)\n\n"
                    f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
                    f"‚Ä¢ ${total_usd:.2f}\n"
                    f"‚Ä¢ {total_rub:.2f} ‚ÇΩ\n\n"
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–¥–∞–∂—É."
                )
                
                await update.message.reply_text(
                    confirm_message,
                    reply_markup=reply_markup,
                    parse_mode=ParseMode.MARKDOWN
                )
                return
                
        except ValueError:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞ (–≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ)
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.\n"
                "–ù–∞–ø—Ä–∏–º–µ—Ä: 0.75",
                parse_mode=ParseMode.MARKDOWN
            )
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å—É–º–º LTC
    elif message_text in ["0.1 LTC", "0.25 LTC", "0.5 LTC", "1 LTC", "2 LTC", "5 LTC"]:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ, —É–±–∏—Ä–∞—è " LTC" –≤ –∫–æ–Ω—Ü–µ
        ltc_amount = float(message_text.replace(" LTC", ""))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
        operation = context.user_data.get("current_operation", "")
        
        if operation == "buy_ltc":
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
            rates = get_current_rates()
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö –∏ –æ–±—â—É—é —Å—É–º–º—É
            ltc_buy_rub = rates["ltc_usd_buy"] * rates["usd_rub_buy"]
            total_rub = ltc_amount * ltc_buy_rub
            total_usd = ltc_amount * rates["ltc_usd_buy"]
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            buttons = [
                [KeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É")],
                [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
            ]
            reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
            context.user_data["order_data"] = {
                "type": "buy",
                "ltc_amount": ltc_amount,
                "total_rub": total_rub,
                "total_usd": total_usd,
                "rate_used": rates["ltc_usd_buy"]
            }
            
            confirm_message = (
                f"üîç *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏*\n\n"
                f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∫—É–ø–∏—Ç—å *{ltc_amount} LTC*\n"
                f"–ü–æ –∫—É—Ä—Å—É: ${rates['ltc_usd_buy']:.2f} (‚âà {ltc_buy_rub:.2f} ‚ÇΩ)\n\n"
                f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:\n"
                f"‚Ä¢ ${total_usd:.2f}\n"
                f"‚Ä¢ {total_rub:.2f} ‚ÇΩ\n\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø–æ–∫—É–ø–∫—É."
            )
            
            await update.message.reply_text(
                confirm_message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            return
            
        elif operation == "sell_ltc":
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã
            rates = get_current_rates()
            
            # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å LTC –≤ —Ä—É–±–ª—è—Ö –∏ –æ–±—â—É—é —Å—É–º–º—É
            ltc_sell_rub = rates["ltc_usd_sell"] * rates["usd_rub_sell"]
            total_rub = ltc_amount * ltc_sell_rub
            total_usd = ltc_amount * rates["ltc_usd_sell"]
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            buttons = [
                [KeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É")],
                [KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
            ]
            reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
            context.user_data["order_data"] = {
                "type": "sell",
                "ltc_amount": ltc_amount,
                "total_rub": total_rub,
                "total_usd": total_usd,
                "rate_used": rates["ltc_usd_sell"]
            }
            
            confirm_message = (
                f"üîç *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏*\n\n"
                f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–¥–∞—Ç—å *{ltc_amount} LTC*\n"
                f"–ü–æ –∫—É—Ä—Å—É: ${rates['ltc_usd_sell']:.2f} (‚âà {ltc_sell_rub:.2f} ‚ÇΩ)\n\n"
                f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ:\n"
                f"‚Ä¢ ${total_usd:.2f}\n"
                f"‚Ä¢ {total_rub:.2f} ‚ÇΩ\n\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–¥–∞–∂—É."
            )
            
            await update.message.reply_text(
                confirm_message,
                reply_markup=reply_markup,
                parse_mode=ParseMode.MARKDOWN
            )
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏
    elif message_text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø–æ–∫—É–ø–∫—É
        user_id = update.effective_user.id
        user = await get_user(user_id)
        username = user.get("username") if user else update.effective_user.username or f"user_{user_id}"
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        order_data = context.user_data.get("order_data", {})
        
        if not order_data:
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        order = await create_order(user_id, username, "buy", order_data.get("total_rub", 0))
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = get_main_menu_keyboard(is_admin=is_admin)
        
        await update.message.reply_text(
            f"‚úÖ *–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!*\n\n"
            f"‚Ä¢ –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {order['order_number']}\n"
            f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order_data.get('ltc_amount', 0)} LTC\n"
            f"‚Ä¢ –°—É–º–º–∞: {order_data.get('total_rub', 0):.2f} ‚ÇΩ\n\n"
            f"–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if "current_operation" in context.user_data:
            del context.user_data["current_operation"]
        if "order_data" in context.user_data:
            del context.user_data["order_data"]
        
        return
        
    elif message_text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É":
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
        user_id = update.effective_user.id
        user = await get_user(user_id)
        username = user.get("username") if user else update.effective_user.username or f"user_{user_id}"
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
        order_data = context.user_data.get("order_data", {})
        
        if not order_data:
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        order = await create_order(user_id, username, "sell", order_data.get("total_rub", 0))
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = get_main_menu_keyboard(is_admin=is_admin)
        
        await update.message.reply_text(
            f"‚úÖ *–ó–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!*\n\n"
            f"‚Ä¢ –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {order['order_number']}\n"
            f"‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {order_data.get('ltc_amount', 0)} LTC\n"
            f"‚Ä¢ –°—É–º–º–∞: {order_data.get('total_rub', 0):.2f} ‚ÇΩ\n\n"
            f"–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if "current_operation" in context.user_data:
            del context.user_data["current_operation"]
        if "order_data" in context.user_data:
            del context.user_data["order_data"]
        
        return
        
    elif message_text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        # –û—Ç–º–µ–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = get_main_menu_keyboard(is_admin=is_admin)
        
        await update.message.reply_text(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            reply_markup=keyboard
        )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        if "current_operation" in context.user_data:
            del context.user_data["current_operation"]
        if "order_data" in context.user_data:
            del context.user_data["order_data"]
            
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –∑–∞—è–≤–∫–∏"
    elif message_text == "üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏":
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from bot.database import get_user_orders
        user_orders = await get_user_orders(user_id)
        
        if not user_orders:
            await update.message.reply_text(
                "üìã *–í–∞—à–∏ –∑–∞—è–≤–∫–∏*\n\n"
                "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏ –∫—Ä–∏–ø—Ç—ã.",
                parse_mode=ParseMode.MARKDOWN
            )
            return
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞—è–≤–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É
        active_orders = [order for order in user_orders if order.get("status") == "active"]
        in_progress_orders = [order for order in user_orders if order.get("status") == "in_progress"]
        completed_orders = [order for order in user_orders if order.get("status") == "completed"]
        
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞—è–≤–∫–∞—Ö
        orders_text = "üìã *–í–∞—à–∏ –∑–∞—è–≤–∫–∏:*\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏
        if active_orders:
            orders_text += "*–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏:*\n"
            for i, order in enumerate(active_orders):
                order_type = "–ü–æ–∫—É–ø–∫–∞" if order.get("type") == "buy" else "–ü—Ä–æ–¥–∞–∂–∞"
                amount = order.get("ltc_amount", order.get("amount", 0))
                total_rub = order.get("total_rub", 0)
                
                orders_text += (
                    f"{i+1}. *–ó–∞—è–≤–∫–∞ {order.get('order_number', '–±/–Ω')}*\n"
                    f"   –¢–∏–ø: {order_type} LTC\n"
                    f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} LTC\n"
                    f"   –°—É–º–º–∞: {total_rub:.2f} ‚ÇΩ\n"
                    f"   –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n"
                )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫–∏ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        if in_progress_orders:
            orders_text += "*–í –æ–±—Ä–∞–±–æ—Ç–∫–µ:*\n"
            for i, order in enumerate(in_progress_orders):
                order_type = "–ü–æ–∫—É–ø–∫–∞" if order.get("type") == "buy" else "–ü—Ä–æ–¥–∞–∂–∞"
                amount = order.get("ltc_amount", order.get("amount", 0))
                total_rub = order.get("total_rub", 0)
                
                orders_text += (
                    f"{i+1}. *–ó–∞—è–≤–∫–∞ {order.get('order_number', '–±/–Ω')}*\n"
                    f"   –¢–∏–ø: {order_type} LTC\n"
                    f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} LTC\n"
                    f"   –°—É–º–º–∞: {total_rub:.2f} ‚ÇΩ\n"
                    f"   –°—Ç–∞—Ç—É—Å: –í –æ–±—Ä–∞–±–æ—Ç–∫–µ\n\n"
                )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 3)
        if completed_orders:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
            recent_completed = completed_orders[:3]
            orders_text += "*–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ:*\n"
            for i, order in enumerate(recent_completed):
                order_type = "–ü–æ–∫—É–ø–∫–∞" if order.get("type") == "buy" else "–ü—Ä–æ–¥–∞–∂–∞"
                amount = order.get("ltc_amount", order.get("amount", 0))
                total_rub = order.get("total_rub", 0)
                
                orders_text += (
                    f"{i+1}. *–ó–∞—è–≤–∫–∞ {order.get('order_number', '–±/–Ω')}*\n"
                    f"   –¢–∏–ø: {order_type} LTC\n"
                    f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} LTC\n"
                    f"   –°—É–º–º–∞: {total_rub:.2f} ‚ÇΩ\n"
                    f"   –°—Ç–∞—Ç—É—Å: –ó–∞–≤–µ—Ä—à–µ–Ω–∞\n\n"
                )
                
            if len(completed_orders) > 3:
                orders_text += f"_–ü–æ–∫–∞–∑–∞–Ω–æ 3 –∏–∑ {len(completed_orders)} –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫._\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_orders = len(user_orders)
        total_volume = sum(order.get("ltc_amount", order.get("amount", 0)) for order in user_orders)
        
        orders_text += (
            f"*–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
            f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {total_orders}\n"
            f"‚Ä¢ –û–±—â–∏–π –æ–±—ä–µ–º: {total_volume:.4f} LTC\n"
        )
        
        try:
            await update.message.reply_text(
                orders_text,
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫: {e}")
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            await update.message.reply_text(
                "–í–∞—à–∏ –∑–∞—è–≤–∫–∏:\n\n" + 
                orders_text.replace('*', '').replace('_', '')
            )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    elif message_text == "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        if is_admin:
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            from bot.database import get_active_orders
            active_orders = await get_active_orders()
            
            if not active_orders:
                await update.message.reply_text(
                    "üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏*\n\n"
                    "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.",
                    parse_mode=ParseMode.MARKDOWN
                )
                return
            
            # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞—è–≤–∫–∞—Ö
            orders_text = "üìã *–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏:*\n\n"
            
            for i, order in enumerate(active_orders[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 10 –∑–∞—è–≤–æ–∫
                order_type = "–ü–æ–∫—É–ø–∫–∞" if order.get("type", "") == "buy" else "–ü—Ä–æ–¥–∞–∂–∞"
                user_id = order.get("user_id", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                username = order.get("username", f"user_{user_id}")
                amount = order.get("ltc_amount", order.get("amount", 0))
                total_rub = order.get("total_rub", 0)
                
                orders_text += (
                    f"{i+1}. *–ó–∞—è–≤–∫–∞ {order.get('order_number', '–±/–Ω')}*\n"
                    f"   –¢–∏–ø: {order_type} LTC\n"
                    f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount} LTC\n"
                    f"   –°—É–º–º–∞: {total_rub:.2f} ‚ÇΩ\n"
                    f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username} (ID: {user_id})\n\n"
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
            if len(active_orders) > 10:
                orders_text += f"–ü–æ–∫–∞–∑–∞–Ω–æ 10 –∏–∑ {len(active_orders)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫."
            
            await update.message.reply_text(
                orders_text,
                parse_mode=ParseMode.MARKDOWN
            )
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é
    elif message_text == "‚ùì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
        buttons = [
            [KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")],
            [KeyboardButton("üë®‚Äçüíª –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
            [KeyboardButton("üì¢ –†–µ–∫–ª–∞–º–∞")],
            [KeyboardButton("üìã –ü—Ä–∞–≤–∏–ª–∞")],
            [KeyboardButton("‚≠ê –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")],
            [KeyboardButton("üí¨ –û–±—â–∏–π —á–∞—Ç")],
            [KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        await update.message.reply_text(
            "‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ*\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ "
            "–Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–ª–∏ —É–∑–Ω–∞—Ç—å "
            "–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã.",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ":
        await update.message.reply_text(
            "‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ*\n\n"
            "–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏ –æ–±–º–µ–Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã Litecoin (LTC).\n\n"
            "‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –æ–±–º–µ–Ω –±–µ–∑ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫\n"
            "‚Ä¢ –í—ã–≥–æ–¥–Ω—ã–µ –∫—É—Ä—Å—ã\n"
            "‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è–º–∏\n"
            "‚Ä¢ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üë®‚Äçüíª –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        await update.message.reply_text(
            "üë®‚Äçüíª *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º:\n"
            "@admin_support_username\n\n"
            "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7\n"
            "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 15 –º–∏–Ω—É—Ç",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üì¢ –†–µ–∫–ª–∞–º–∞":
        await update.message.reply_text(
            "üì¢ *–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã*\n\n"
            "–î–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º—ã –≤ –Ω–∞—à–µ–º –±–æ—Ç–µ –∏–ª–∏ –∫–∞–Ω–∞–ª–∞—Ö, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:\n"
            "@admin_ads_username\n\n"
            "–ù–∞—à–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è - –±–æ–ª–µ–µ 1000 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö—Å—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üìã –ü—Ä–∞–≤–∏–ª–∞":
        await update.message.reply_text(
            "üìã *–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞*\n\n"
            "1. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –¥–ª—è –Ω–µ–ª–µ–≥–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n"
            "2. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–±–º–µ–Ω–∞: 0.01 LTC\n"
            "3. –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –æ–±–º–µ–Ω: 1-3% –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã\n"
            "4. –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏: –¥–æ 30 –º–∏–Ω—É—Ç\n"
            "5. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Å–ø–æ—Ä–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à —Å–µ—Ä–≤–∏—Å, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞—à–∏ –†–µ—Å—É—Ä—Å—ã
    elif message_text == "üìã –ù–∞—à–∏ –†–µ—Å—É—Ä—Å—ã":
        buttons = [
            [KeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª")],
            [KeyboardButton("‚≠ê –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤")],
            [KeyboardButton("üí¨ –û–±—â–∏–π —á–∞—Ç")]
        ]
        reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
        
        await update.message.reply_text(
            "üìã *–ù–∞—à–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:*\n\n"
            "üì∞ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª\n"
            "‚îî –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≤—ã–≥–æ–¥–Ω—ã–µ –∞–∫—Ü–∏–∏\n\n"
            "‚≠ê –ö–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏\n"
            "‚îî –ß–µ—Å—Ç–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤\n\n"
            "üí¨ –û–±—â–∏–π —á–∞—Ç\n"
            "‚îî –û–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â—å\n\n"
            "üîî –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π!",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üì∞ –ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª":
        await update.message.reply_text(
            "üì∞ *–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª*\n\n"
            "–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏:\n"
            "https://t.me/crypto_exchange_news\n\n"
            "–¢–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ:\n"
            "‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
            "‚Ä¢ –í—ã–≥–æ–¥–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è\n"
            "‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
            "‚Ä¢ –ê–Ω–æ–Ω—Å—ã –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "‚≠ê –û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤":
        await update.message.reply_text(
            "‚≠ê *–û—Ç–∑—ã–≤—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤*\n\n"
            "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —á–µ—Å—Ç–Ω—ã–º–∏ –æ—Ç–∑—ã–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞:\n"
            "https://t.me/crypto_exchange_reviews\n\n"
            "–ú—ã –≥–æ—Ä–¥–∏–º—Å—è –Ω–∞—à–µ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–∏—Å –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.",
            parse_mode=ParseMode.MARKDOWN
        )
        return
        
    elif message_text == "üí¨ –û–±—â–∏–π —á–∞—Ç":
        await update.message.reply_text(
            "üí¨ *–û–±—â–∏–π —á–∞—Ç*\n\n"
            "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –æ–±—â–µ–º—É —á–∞—Ç—É:\n"
            "https://t.me/crypto_exchange_chat\n\n"
            "–í —á–∞—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –û–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
            "‚Ä¢ –ó–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞—Ç—å –æ—Ç–≤–µ—Ç—ã\n"
            "‚Ä¢ –î–µ–ª–∏—Ç—å—Å—è –æ–ø—ã—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –ø–æ–º–æ—â—å –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
            parse_mode=ParseMode.MARKDOWN
        )
        return

async def handle_admin_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö"""
    message_text = update.message.text
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not context.user_data:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
    is_admin = await check_admin(user_id)
    if not is_admin:
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    admin_state = context.user_data.get("admin_state")
    if not admin_state:
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∞–¥–º–∏–Ω–∞
    if admin_state == "waiting_for_min_amount":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –û—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
            await update.message.reply_text(
                "üîÑ *–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ*\n\n"
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π"],
                    ["üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                    ["üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            del context.user_data["admin_state"]
            return
        
        try:
            # –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            new_min_amount = float(message_text.strip())
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ)
            if new_min_amount <= 0:
                raise ValueError("–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π")
                
            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            set_min_amount(new_min_amount)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            await update.message.reply_text(
                f"‚úÖ *–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!*\n\n"
                f"–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: *{new_min_amount:.2f} PMR —Ä—É–±–ª–µ–π*",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏", "üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π"],
                    ["üí∞ –ú–∏–Ω. —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                    ["üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            
        except (ValueError, TypeError) as e:
            # –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞
            await update.message.reply_text(
                f"‚ùå *–û—à–∏–±–∫–∞!*\n\n"
                f"–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.\n"
                f"–ù–∞–ø—Ä–∏–º–µ—Ä: 500 –∏–ª–∏ 1000.50",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
        
    elif admin_state == "waiting_for_user_id_search":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                if "admin_state" in context.user_data:
                    del context.user_data["admin_state"]
                await handle_admin_panel(update, context)
                return
                
            if message_text == "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏":
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –≤ —Ä–∞–∑–¥–µ–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
                if "admin_state" in context.user_data:
                    del context.user_data["admin_state"]
                await update.message.reply_text(
                    "üë• *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n\n"
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë§ –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "üß© –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å"],
                        ["üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å/–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å"],
                        ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ (ID –∏–ª–∏ @username)
            search_query = message_text.strip() if message_text else ""
            
            # –õ–æ–≥–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info(f"–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {search_query}")
            logger.info(f"–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {type(search_query)}")
            
            # –î–ª—è —Å–ø—Ä–∞–≤–∫–∏, –ø–æ–∫–∞–∂–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_id = update.effective_user.id
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
            if not search_query:
                logger.warning("–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å")
                await update.message.reply_text(
                    f"‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞*\n\n"
                    f"–í–∞—à ID: `{user_id}`\n\n"
                    f"‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å ID –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"
                    f"–ù–∞–ø—Ä–∏–º–µ—Ä: `{user_id}` –∏–ª–∏ `@username`\n\n"
                    f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞:",
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞
            if isinstance(search_query, str) and search_query.startswith('@'):
                username = search_query[1:]  # –£–±–∏—Ä–∞–µ–º @ –∏–∑ –Ω–∞—á–∞–ª–∞
                logger.info(f"–ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username: {username}")
                # –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                users_data = await get_users()
                if not users_data:
                    users_data = {}
                logger.info(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_data)}")
                found_user = None
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ª–æ–≤–∞—Ä–µ users_data
                for user_id_str, user_data in users_data.items():
                    try:
                        user_id = int(user_id_str)
                        user_username = user_data.get('username', '')
                        logger.info(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID:{user_id} —Å username:{user_username}")
                        
                        if user_username and user_username.lower() == username.lower():
                            found_user = (user_id, user_data)
                            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user_id}")
                            break
                    except (ValueError, TypeError) as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id_str}: {e}")
                        continue
                
                if found_user:
                    user_id, user_data = found_user
                    role = user_data.get('role', 'user')
                    balance = user_data.get('balance', 0)
                    username = user_data.get('username', '–ù–µ—Ç –∏–º–µ–Ω–∏')
                    registration_date = user_data.get('registration_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    
                    await update.message.reply_text(
                        f"üë§ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ*\n\n"
                        f"*ID:* `{user_id}`\n"
                        f"*–ò–º—è:* {username}\n"
                        f"*–†–æ–ª—å:* {role}\n"
                        f"*–ë–∞–ª–∞–Ω—Å:* {balance} LTC\n"
                        f"*–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:* {registration_date}\n\n"
                        f"–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.",
                        parse_mode=ParseMode.MARKDOWN,
                        reply_markup=ReplyKeyboardMarkup([
                            ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                        ], resize_keyboard=True)
                    )
                else:
                    logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º '{search_query[1:]}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    await update.message.reply_text(
                        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º {search_query} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                        reply_markup=ReplyKeyboardMarkup([
                            ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                        ], resize_keyboard=True)
                    )
            elif search_query.isdigit() or (search_query.startswith('-') and search_query[1:].isdigit()):
                # –ü–æ–∏—Å–∫ –ø–æ ID (—Ç–∞–∫–∂–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ ID —á–∞—Ç–æ–≤)
                try:
                    user_id = int(search_query)
                    logger.info(f"–ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID: {user_id}")
                    
                    # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤ (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ ID)
                    if user_id < 0:
                        logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞: {user_id}")
                        await update.message.reply_text(
                            f"‚ÑπÔ∏è ID {user_id} –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≥—Ä—É–ø–ø–æ–≤–æ–º—É —á–∞—Ç—É, –∞ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.\n"
                            "–î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID –∏–ª–∏ @username.",
                            reply_markup=ReplyKeyboardMarkup([
                                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                            ], resize_keyboard=True)
                        )
                        return
                    
                    user = await get_user(user_id)
                    logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞: {user}")
                    
                    if user:
                        role = user.get('role', 'user')
                        balance = user.get('balance', 0)
                        username = user.get('username', '–ù–µ—Ç –∏–º–µ–Ω–∏')
                        registration_date = user.get('registration_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                        
                        await update.message.reply_text(
                            f"üë§ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ*\n\n"
                            f"*ID:* `{user_id}`\n"
                            f"*–ò–º—è:* {username}\n"
                            f"*–†–æ–ª—å:* {role}\n"
                            f"*–ë–∞–ª–∞–Ω—Å:* {balance} LTC\n"
                            f"*–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:* {registration_date}\n\n"
                            f"–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.",
                            parse_mode=ParseMode.MARKDOWN,
                            reply_markup=ReplyKeyboardMarkup([
                                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                            ], resize_keyboard=True)
                        )
                    else:
                        logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        await update.message.reply_text(
                            "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                            reply_markup=ReplyKeyboardMarkup([
                                ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                            ], resize_keyboard=True)
                        )
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID: {e}")
                    await update.message.reply_text(
                        "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
                        reply_markup=ReplyKeyboardMarkup([
                            ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                            ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                        ], resize_keyboard=True)
                    )
            else:
                await update.message.reply_text(
                    "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ ID (—á–∏—Å–ª–æ–≤–æ–π) –∏–ª–∏ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await update.message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            del context.user_data["admin_state"]
            
    elif admin_state == "waiting_for_user_role_change":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            # –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            parts = message_text.strip().split()
            if len(parts) != 2:
                await update.message.reply_text(
                    "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `ID —Ä–æ–ª—å`\n"
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: `123456789 operator`",
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
                
            user_id_str, role = parts
            
            try:
                user_id = int(user_id_str)
            except ValueError:
                await update.message.reply_text(
                    "‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–æ–ª–∏
            if role not in ["user", "operator", "admin"]:
                await update.message.reply_text(
                    "‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ä–æ–ª—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `user`, `operator` –∏–ª–∏ `admin`.",
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await get_user(user_id)
            if not user:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user["role"] = role
            await save_user(user_id, user)
            
            # –ï—Å–ª–∏ —Ä–æ–ª—å "admin", —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            if role == "admin":
                add_admin(user_id)
            elif role != "admin" and is_admin(user_id):
                remove_admin(user_id)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            username = user.get("username", f"user_{user_id}")
            await update.message.reply_text(
                f"‚úÖ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} (ID: {user_id}) –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {role}",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await update.message.reply_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
    elif admin_state == "waiting_for_balance_change":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            # –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            parts = message_text.strip().split()
            if len(parts) != 2:
                await update.message.reply_text(
                    "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `ID —Å—É–º–º–∞`\n"
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: `123456789 +500` –∏–ª–∏ `123456789 -200`",
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
                
            user_id_str, amount_str = parts
            
            try:
                user_id = int(user_id_str)
            except ValueError:
                await update.message.reply_text(
                    "‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            try:
                amount = float(amount_str)
            except ValueError:
                await update.message.reply_text(
                    "‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await get_user(user_id)
            if not user:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            current_balance = user.get("balance", 0)
            new_balance = current_balance + amount
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –±–∞–ª–∞–Ω—Å –Ω–µ —Å—Ç–∞–ª –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º
            if new_balance < 0:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å. "
                    f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance}, –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {amount}",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            user["balance"] = new_balance
            await save_user(user_id, user)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            username = user.get("username", f"user_{user_id}")
            amount_text = f"+{amount}" if amount >= 0 else f"{amount}"
            await update.message.reply_text(
                f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} (ID: {user_id}) –∏–∑–º–µ–Ω–µ–Ω: {amount_text}\n"
                f"–°—Ç–∞—Ä—ã–π –±–∞–ª–∞–Ω—Å: {current_balance}\n"
                f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance}",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await update.message.reply_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
    elif admin_state == "waiting_for_user_block":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            # –ü–∞—Ä—Å–∏–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            try:
                user_id = int(message_text.strip())
            except ValueError:
                await update.message.reply_text(
                    "‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await get_user(user_id)
            if not user:
                await update.message.reply_text(
                    f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                    reply_markup=ReplyKeyboardMarkup([
                        ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                        ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                    ], resize_keyboard=True)
                )
                return
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            user["is_blocked"] = True
            await save_user(user_id, user)
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            username = user.get("username", f"user_{user_id}")
            await update.message.reply_text(
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} (ID: {user_id}) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await update.message.reply_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}",
                reply_markup=ReplyKeyboardMarkup([
                    ["üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
    elif admin_state == "waiting_for_referral_settings":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
        await update_referral_settings(update, context)
        
    elif admin_state == "waiting_rates":
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –∫—É—Ä—Å–æ–≤
        try:
            # –ü–∞—Ä—Å–∏–Ω–≥ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
            values = [float(x) for x in message_text.split()]
            if len(values) != 4:
                raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ 4 –∑–Ω–∞—á–µ–Ω–∏—è")
            
            ltc_usd_buy, ltc_usd_sell, usd_rub_buy, usd_rub_sell = values
            
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤
            update_rates(ltc_usd_buy, ltc_usd_sell, usd_rub_buy, usd_rub_sell)
            
            # –ü–æ–∫–∞–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
            rates = get_current_rates()
            await update.message.reply_text(
                f"‚úÖ *–ö—É—Ä—Å—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!*\n\n"
                f"*–ù–æ–≤—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_admin_keyboard()
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤
            bot = context.bot
            chat_id = load_config().get("main_chat_id")
            if chat_id:
                await bot.send_message(
                    chat_id=chat_id,
                    text=f"üì¢ *–ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–£–†–°–û–í*\n\n"
                    f"üîÑ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:\n\n"
                    f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                    f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                    f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                    f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                    f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB",
                    parse_mode=ParseMode.MARKDOWN
                )
            
            # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
            del context.user_data["admin_state"]
            
        except (ValueError, IndexError) as e:
            await update.message.reply_text(
                f"‚ùå *–û—à–∏–±–∫–∞!*\n\n"
                f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ 4 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
                f"`70 68 90 88`\n\n"
                f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_admin_keyboard()
            )
    
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
    elif context.user_data.get("admin_state") == "select_rate_to_change":
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
            # –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            await update.message.reply_text(
                "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=get_admin_keyboard()
            )
            del context.user_data["admin_state"]
            return
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –∫—É—Ä—Å –≤—ã–±—Ä–∞–Ω –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
        rate_type = None
        
        if message_text == "üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)" or message_text == "üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)" or message_text == "ü™ô –ü–æ–∫—É–ø–∫–∞ LTC (USD)":
            rate_type = "ltc_usd_buy"
            rate_name = "–ü–æ–∫—É–ø–∫–∞ LTC"
            rate_unit = "USD"
            current_value = get_current_rates()["ltc_usd_buy"]
        elif message_text == "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)" or message_text == "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)" or message_text == "ü™ô –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)":
            rate_type = "ltc_usd_sell"
            rate_name = "–ü—Ä–æ–¥–∞–∂–∞ LTC" 
            rate_unit = "USD"
            current_value = get_current_rates()["ltc_usd_sell"]
        elif message_text == "üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)" or message_text == "üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)" or message_text == "üí± –ü–æ–∫—É–ø–∫–∞ USD (RUB)":
            rate_type = "usd_rub_buy"
            rate_name = "–ü–æ–∫—É–ø–∫–∞ USD"
            rate_unit = "RUB"
            current_value = get_current_rates()["usd_rub_buy"]
        elif message_text == "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)" or message_text == "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)" or message_text == "üí± –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)":
            rate_type = "usd_rub_sell"
            rate_name = "–ü—Ä–æ–¥–∞–∂–∞ USD"
            rate_unit = "RUB"
            current_value = get_current_rates()["usd_rub_sell"]
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await update.message.reply_text(
                "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=ReplyKeyboardMarkup([
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                    ["üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            return
            
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        keyboard = ReplyKeyboardMarkup([
            [f"+1% ({(current_value * 1.01):.2f})", f"+5% ({(current_value * 1.05):.2f})"],
            [f"-1% ({(current_value * 0.99):.2f})", f"-5% ({(current_value * 0.95):.2f})"],
            ["üìù –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", "üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞"]
        ], resize_keyboard=True)
        
        await update.message.reply_text(
            f"üí± *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫—É—Ä—Å–∞: {rate_name}*\n\n"
            f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {current_value} {rate_unit}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:",
            reply_markup=keyboard,
            parse_mode=ParseMode.MARKDOWN
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫—É—Ä—Å–µ
        context.user_data["admin_state"] = "change_rate_value"
        context.user_data["rate_data"] = {
            "type": rate_type,
            "name": rate_name,
            "unit": rate_unit,
            "current_value": current_value
        }
        
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞
    elif context.user_data.get("admin_state") == "change_rate_value":
        rate_data = context.user_data.get("rate_data", {})
        
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞
            rates = get_current_rates()
            await update.message.reply_text(
                f"üí± *–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –∫—É—Ä—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                reply_markup=ReplyKeyboardMarkup([
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                    ["üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data["admin_state"] = "select_rate_to_change"
            if "rate_data" in context.user_data:
                del context.user_data["rate_data"]
            return
            
        elif message_text == "üìù –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
            await update.message.reply_text(
                f"üìù *–†—É—á–Ω–æ–π –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –∫—É—Ä—Å–∞*\n\n"
                f"–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {rate_data.get('current_value')} {rate_data.get('unit')}\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70.5):",
                reply_markup=ReplyKeyboardMarkup([["üîÑ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞"]], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data["admin_state"] = "manual_rate_input"
            return
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –±—ã—Å—Ç—Ä–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        new_value = None
        current_value = rate_data.get("current_value", 0)
        
        if message_text == f"+1% ({(current_value * 1.01):.2f})":
            new_value = current_value * 1.01
        elif message_text == f"+5% ({(current_value * 1.05):.2f})":
            new_value = current_value * 1.05
        elif message_text == f"-1% ({(current_value * 0.99):.2f})":
            new_value = current_value * 0.99
        elif message_text == f"-5% ({(current_value * 0.95):.2f})":
            new_value = current_value * 0.95
        else:
            # –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ
            try:
                new_value = float(message_text)
            except ValueError:
                # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
                keyboard = ReplyKeyboardMarkup([
                    [f"+1% ({(current_value * 1.01):.2f})", f"+5% ({(current_value * 1.05):.2f})"],
                    [f"-1% ({(current_value * 0.99):.2f})", f"-5% ({(current_value * 0.95):.2f})"],
                    ["üìù –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", "üîÑ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞"]
                ], resize_keyboard=True)
                
                await update.message.reply_text(
                    f"‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n"
                    f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
                    reply_markup=keyboard,
                    parse_mode=ParseMode.MARKDOWN
                )
                return
                
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        rates = get_current_rates()
        rate_type = rate_data.get("type")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å
        if rate_type == "ltc_usd_buy":
            update_rates(new_value, rates["ltc_usd_sell"], rates["usd_rub_buy"], rates["usd_rub_sell"])
        elif rate_type == "ltc_usd_sell":
            update_rates(rates["ltc_usd_buy"], new_value, rates["usd_rub_buy"], rates["usd_rub_sell"])
        elif rate_type == "usd_rub_buy":
            update_rates(rates["ltc_usd_buy"], rates["ltc_usd_sell"], new_value, rates["usd_rub_sell"])
        elif rate_type == "usd_rub_sell":
            update_rates(rates["ltc_usd_buy"], rates["ltc_usd_sell"], rates["usd_rub_buy"], new_value)
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
        rates = get_current_rates()
        await update.message.reply_text(
            f"‚úÖ *–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!*\n\n"
            f"*–ù–æ–≤—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
            f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
            f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
            f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
            f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
            f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
            f"–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–æ–π –∫—É—Ä—Å?",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                ["üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True)
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤
        bot = context.bot
        chat_id = load_config().get("main_chat_id")
        if chat_id:
            await bot.send_message(
                chat_id=chat_id,
                text=f"üì¢ *–ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–£–†–°–û–í*\n\n"
                f"üîÑ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:\n\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB",
                parse_mode=ParseMode.MARKDOWN
            )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
        context.user_data["admin_state"] = "select_rate_to_change"
        if "rate_data" in context.user_data:
            del context.user_data["rate_data"]
            
    # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∫—É—Ä—Å–∞
    elif context.user_data.get("admin_state") == "manual_rate_input":
        rate_data = context.user_data.get("rate_data", {})
        
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞
            rates = get_current_rates()
            await update.message.reply_text(
                f"üí± *–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π –∫—É—Ä—Å –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                reply_markup=ReplyKeyboardMarkup([
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                    ["üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data["admin_state"] = "select_rate_to_change"
            if "rate_data" in context.user_data:
                del context.user_data["rate_data"]
            return
            
        # –ü—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ
        try:
            new_value = float(message_text)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            rates = get_current_rates()
            rate_type = rate_data.get("type")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å
            if rate_type == "ltc_usd_buy":
                update_rates(new_value, rates["ltc_usd_sell"], rates["usd_rub_buy"], rates["usd_rub_sell"])
            elif rate_type == "ltc_usd_sell":
                update_rates(rates["ltc_usd_buy"], new_value, rates["usd_rub_buy"], rates["usd_rub_sell"])
            elif rate_type == "usd_rub_buy":
                update_rates(rates["ltc_usd_buy"], rates["ltc_usd_sell"], new_value, rates["usd_rub_sell"])
            elif rate_type == "usd_rub_sell":
                update_rates(rates["ltc_usd_buy"], rates["ltc_usd_sell"], rates["usd_rub_buy"], new_value)
                
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã
            rates = get_current_rates()
            await update.message.reply_text(
                f"‚úÖ *–ö—É—Ä—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!*\n\n"
                f"*–ù–æ–≤—ã–µ –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:*\n\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB\n\n"
                f"–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–æ–π –∫—É—Ä—Å?",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ LTC (USD)", "üí∞ –ü—Ä–æ–¥–∞–∂–∞ LTC (USD)"],
                    ["üíµ –ü–æ–∫—É–ø–∫–∞ USD (RUB)", "üíµ –ü—Ä–æ–¥–∞–∂–∞ USD (RUB)"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤
            bot = context.bot
            chat_id = load_config().get("main_chat_id")
            if chat_id:
                await bot.send_message(
                    chat_id=chat_id,
                    text=f"üì¢ *–ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–£–†–°–û–í*\n\n"
                    f"üîÑ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ–±–Ω–æ–≤–∏–ª –∫—É—Ä—Å—ã –æ–±–º–µ–Ω–∞:\n\n"
                    f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ LTC*: 1 LTC = {rates['ltc_usd_buy']} USD = {rates['ltc_usd_buy'] * rates['usd_rub_buy']} RUB\n"
                    f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ LTC*: 1 LTC = {rates['ltc_usd_sell']} USD = {rates['ltc_usd_sell'] * rates['usd_rub_sell']} RUB\n\n"
                    f"*–ö—É—Ä—Å—ã USD/RUB:*\n"
                    f"‚Ä¢ *–ü–æ–∫—É–ø–∫–∞ USD*: 1 USD = {rates['usd_rub_buy']} RUB\n"
                    f"‚Ä¢ *–ü—Ä–æ–¥–∞–∂–∞ USD*: 1 USD = {rates['usd_rub_sell']} RUB",
                    parse_mode=ParseMode.MARKDOWN
                )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
            context.user_data["admin_state"] = "select_rate_to_change"
            if "rate_data" in context.user_data:
                del context.user_data["rate_data"]
                
        except ValueError:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await update.message.reply_text(
                f"‚ùå *–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞*\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫—É—Ä—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 70.5):",
                reply_markup=ReplyKeyboardMarkup([["üîÑ –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞"]], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏
    elif message_text == "üí¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏" and is_admin:
        # –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await update.message.reply_text(
            "üí¨ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏*\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. "
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏:\n"
            "‚Ä¢ @USERNAME - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ @USERID - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ @BALANCE - –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "‚Ä¢ @DATE - —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞\n\n"
            "–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Markdown-—Ä–∞–∑–º–µ—Ç–∫—É.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üìù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "üîÑ –ü—Ä–æ—Ñ–∏–ª—å"],
                ["üí∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç—ã", "üí± –ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç—ã"],
                ["üìû –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "select_text_to_edit"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    elif context.user_data.get("admin_state") == "select_text_to_edit":
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
            # –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            await update.message.reply_text(
                "üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=get_admin_keyboard()
            )
            del context.user_data["admin_state"]
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –≤—ã–±—Ä–∞–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        text_type = None
        text_name = ""
        text_content = ""
        
        if message_text == "üìù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ":
            text_type = "welcome_text"
            text_name = "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            # –ó–∞–≥–ª—É—à–∫–∞, –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–ª—É—á–∞–µ–º –∏–∑ –±–∞–∑—ã –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥–∞
            text_content = (
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @USERNAME!\n\n"
                "–Ø –±–æ—Ç –¥–ª—è –æ–±–º–µ–Ω–∞ –∏ –ø–æ–∫—É–ø–∫–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã LTC.\n"
                "–í–∞—à ID: @USERID\n\n"
                "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é."
            )
        elif message_text == "üîÑ –ü—Ä–æ—Ñ–∏–ª—å":
            text_type = "profile_text"
            text_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ"
            text_content = (
                "üë§ *–ü—Ä–æ—Ñ–∏–ª—å* @USERNAME\n\n"
                "ID: `@USERID`\n\n"
                "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
                "üü¢ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: 0 —à—Ç.\n"
                "üìà –°–¥–µ–ª–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É: 0 —à—Ç.\n"
                "üìâ –°–¥–µ–ª–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: 0 —à—Ç.\n"
                "üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–æ–∫: 0.00 $\n\n"
                "üìÖ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü:*\n"
                "üü¢ –í—Å–µ–≥–æ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫: 0 —à—Ç.\n"
                "üìà –°–¥–µ–ª–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É: 0 —à—Ç.\n"
                "üìâ –°–¥–µ–ª–æ–∫ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: 0 —à—Ç.\n"
                "üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å–¥–µ–ª–æ–∫: 0.00 $\n\n"
                "üíµ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: 0 %"
            )
        elif message_text == "üí∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç—ã":
            text_type = "buy_crypto_text"
            text_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∫—É–ø–∫–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"
            text_content = (
                "üí∞ *–ü–æ–∫—É–ø–∫–∞ LTC*\n\n"
                "–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 1 LTC = @LTC_USD_BUY USD = @LTC_RUB_BUY RUB\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:"
            )
        elif message_text == "üí± –ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç—ã":
            text_type = "sell_crypto_text"
            text_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–∂–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"
            text_content = (
                "üí± *–ü—Ä–æ–¥–∞–∂–∞ LTC*\n\n"
                "–ö—É—Ä—Å –æ–±–º–µ–Ω–∞: 1 LTC = @LTC_USD_SELL USD = @LTC_RUB_SELL RUB\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é:"
            )
        elif message_text == "üìû –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞":
            text_type = "support_text"
            text_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ"
            text_content = (
                "üìû *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n"
                "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É:\n"
                "üë®‚Äçüíª @OperatorUsername\n\n"
                "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7"
            )
        elif message_text == "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞":
            text_type = "referral_text"
            text_name = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ"
            text_content = (
                "üë• *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞*\n\n"
                "–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —Å –∫–∞–∂–¥–æ–π –∏—Ö —Å–¥–µ–ª–∫–∏!\n\n"
                "–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
                "`https://t.me/YourBot?start=@USERID`\n\n"
                "–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞: 0%\n"
                "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 0\n\n"
                "–£—Å–ª–æ–≤–∏—è:\n"
                "‚Ä¢ 1-10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 10% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏\n"
                "‚Ä¢ 11-25 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 12.5% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏\n"
                "‚Ä¢ 26-50 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 15% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏\n"
                "‚Ä¢ 51-100 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 17.5% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏\n"
                "‚Ä¢ 101+ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 20% –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏"
            )
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await update.message.reply_text(
                "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=ReplyKeyboardMarkup([
                    ["üìù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "üîÑ –ü—Ä–æ—Ñ–∏–ª—å"],
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç—ã", "üí± –ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç—ã"],
                    ["üìû –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            return
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        await update.message.reply_text(
            f"üìù *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞: {text_name}*\n\n"
            f"–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:\n"
            f"```\n{text_content}\n```\n\n"
            f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏:\n"
            f"‚Ä¢ @USERNAME - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            f"‚Ä¢ @USERID - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            f"‚Ä¢ @BALANCE - –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            f"‚Ä¢ @DATE - —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞\n"
            f"‚Ä¢ @LTC_USD_BUY - –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC –≤ USD\n"
            f"‚Ä¢ @LTC_USD_SELL - –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC –≤ USD\n"
            f"‚Ä¢ @LTC_RUB_BUY - –∫—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ LTC –≤ RUB\n"
            f"‚Ä¢ @LTC_RUB_SELL - –∫—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ LTC –≤ RUB\n\n"
            f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞':",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([["üîÑ –û—Ç–º–µ–Ω–∞"]], resize_keyboard=True)
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
        context.user_data["admin_state"] = "edit_text"
        context.user_data["text_data"] = {
            "type": text_type,
            "name": text_name,
            "content": text_content
        }
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    elif context.user_data.get("admin_state") == "edit_text":
        text_data = context.user_data.get("text_data", {})
        
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É —Ç–µ–∫—Å—Ç–∞
            await update.message.reply_text(
                "üí¨ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞–º–∏*\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–µ–∫—Å—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                reply_markup=ReplyKeyboardMarkup([
                    ["üìù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "üîÑ –ü—Ä–æ—Ñ–∏–ª—å"],
                    ["üí∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç—ã", "üí± –ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç—ã"],
                    ["üìû –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data["admin_state"] = "select_text_to_edit"
            if "text_data" in context.user_data:
                del context.user_data["text_data"]
            return
        
        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –±–∞–∑—É –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥
        # –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
        
        await update.message.reply_text(
            f"‚úÖ *–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!*\n\n"
            f"*{text_data.get('name')}* –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω.\n\n"
            f"–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç?",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["üìù –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", "üîÑ –ü—Ä–æ—Ñ–∏–ª—å"],
                ["üí∞ –ü–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç—ã", "üí± –ü—Ä–æ–¥–∞–∂–∞ –∫—Ä–∏–ø—Ç—ã"],
                ["üìû –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞", "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True)
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ –≤—ã–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        context.user_data["admin_state"] = "select_text_to_edit"
        if "text_data" in context.user_data:
            del context.user_data["text_data"]
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏
    elif message_text == "üîò –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏" and is_admin:
        # –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏
        await update.message.reply_text(
            "üîò *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏*\n\n"
            "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ–Ω—é –±–æ—Ç–∞.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
            reply_markup=ReplyKeyboardMarkup([
                ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é"],
                ["üõí –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏", "üí∏ –ú–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏"],
                ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
            ], resize_keyboard=True),
            parse_mode=ParseMode.MARKDOWN
        )
        context.user_data["admin_state"] = "select_buttons_to_edit"
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    elif context.user_data.get("admin_state") == "select_buttons_to_edit":
        if message_text == "üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å":
            # –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
            await update.message.reply_text(
                "üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=get_admin_keyboard()
            )
            del context.user_data["admin_state"]
            return
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±—Ä–∞–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        buttons_type = None
        buttons_name = ""
        buttons_list = []
        
        if message_text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            buttons_type = "main_menu"
            buttons_name = "–ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"
            buttons_list = [
                "üí∞ –ö—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç—É",
                "üí± –ü—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç—É",
                "üë§ –ü—Ä–æ—Ñ–∏–ª—å",
                "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏"
            ]
        elif message_text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é":
            buttons_type = "info_menu"
            buttons_name = "–ö–Ω–æ–ø–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –º–µ–Ω—é"
            buttons_list = [
                "üìã –ü—Ä–∞–≤–∏–ª–∞",
                "üìã –ù–∞—à–∏ –†–µ—Å—É—Ä—Å—ã",
                "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                "üí∞ –¢–∞—Ä–∏—Ñ—ã –∏ –∫–æ–º–∏—Å—Å–∏–∏"
            ]
        elif message_text == "üõí –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏":
            buttons_type = "buy_menu"
            buttons_name = "–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –ø–æ–∫—É–ø–∫–∏"
            buttons_list = [
                "0.1 LTC",
                "0.25 LTC",
                "0.5 LTC",
                "1 LTC",
                "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
            ]
        elif message_text == "üí∏ –ú–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏":
            buttons_type = "sell_menu"
            buttons_name = "–ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏"
            buttons_list = [
                "0.1 LTC",
                "0.25 LTC",
                "0.5 LTC",
                "1 LTC",
                "–î—Ä—É–≥–∞—è —Å—É–º–º–∞"
            ]
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await update.message.reply_text(
                "‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                reply_markup=ReplyKeyboardMarkup([
                    ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é"],
                    ["üõí –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏", "üí∏ –ú–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True)
            )
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è
        buttons_text = "\n".join([f"‚Ä¢ {button}" for button in buttons_list])
        
        await update.message.reply_text(
            f"üîò *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫: {buttons_name}*\n\n"
            f"–¢–µ–∫—É—â–∏–µ –∫–Ω–æ–ø–∫–∏:\n{buttons_text}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"],
                ["‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", "üîÑ –û—Ç–º–µ–Ω–∞"]
            ], resize_keyboard=True)
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∞—Ö
        context.user_data["admin_state"] = "edit_buttons_action"
        context.user_data["buttons_data"] = {
            "type": buttons_type,
            "name": buttons_name,
            "list": buttons_list
        }
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    elif context.user_data.get("admin_state") == "edit_buttons_action":
        buttons_data = context.user_data.get("buttons_data", {})
        
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –∫–Ω–æ–ø–æ–∫
            await update.message.reply_text(
                "üîò *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏*\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                reply_markup=ReplyKeyboardMarkup([
                    ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é"],
                    ["üõí –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏", "üí∏ –ú–µ–Ω—é –ø—Ä–æ–¥–∞–∂–∏"],
                    ["üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"]
                ], resize_keyboard=True),
                parse_mode=ParseMode.MARKDOWN
            )
            context.user_data["admin_state"] = "select_buttons_to_edit"
            if "buttons_data" in context.user_data:
                del context.user_data["buttons_data"]
            return
        
        if message_text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É":
            # –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
            await update.message.reply_text(
                f"‚ûï *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏*\n\n"
                f"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏:",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([["üîÑ –û—Ç–º–µ–Ω–∞"]], resize_keyboard=True)
            )
            context.user_data["admin_state"] = "add_button"
            context.user_data["buttons_action"] = "add"
            return
        
        elif message_text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É":
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞
            buttons = []
            for button in buttons_data.get("list", []):
                buttons.append([button])
            buttons.append(["üîÑ –û—Ç–º–µ–Ω–∞"])
            
            # –ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
            await update.message.reply_text(
                f"‚úèÔ∏è *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            )
            context.user_data["admin_state"] = "select_button_to_edit"
            context.user_data["buttons_action"] = "edit"
            return
        
        elif message_text == "‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É":
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞
            buttons = []
            for button in buttons_data.get("list", []):
                buttons.append([button])
            buttons.append(["üîÑ –û—Ç–º–µ–Ω–∞"])
            
            # –ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            await update.message.reply_text(
                f"‚ùå *–£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup(buttons, resize_keyboard=True)
            )
            context.user_data["admin_state"] = "select_button_to_delete"
            context.user_data["buttons_action"] = "delete"
            return
        
        else:
            # –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥
            await update.message.reply_text(
                f"‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'",
                reply_markup=ReplyKeyboardMarkup([
                    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"],
                    ["‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", "üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
            return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    elif admin_state == "select_button_to_edit":
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
            await update.message.reply_text(
                "üîÑ *–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ*\n\n"
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"],
                    ["‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", "üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
            del context.user_data["admin_state"]
            del context.user_data["buttons_action"]
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–Ω–æ–ø–∫–∞—Ö
        config = load_config()
        buttons_data = config.get("buttons", {"list": []})
        button_list = buttons_data.get("list", [])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
        if message_text in button_list:
            # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
            context.user_data["selected_button"] = message_text
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
            await update.message.reply_text(
                "‚úèÔ∏è *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏*\n\n"
                f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–Ω–æ–ø–∫—É: *{message_text}*\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—É—â–µ–µ:\n\n"
                "–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: " + message_text,
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"],
                    ["üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
            context.user_data["admin_state"] = "edit_button_name"
        else:
            # –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            await update.message.reply_text(
                "‚ùå *–û—à–∏–±–∫–∞*\n\n"
                f"–ö–Ω–æ–ø–∫–∞ '{message_text}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_admin_keyboard()
            )
    
    elif admin_state == "edit_button_name":
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
            await update.message.reply_text(
                "üîÑ *–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ*\n\n"
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"],
                    ["‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", "üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
            for key in ["admin_state", "buttons_action", "selected_button"]:
                if key in context.user_data:
                    del context.user_data[key]
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        selected_button = context.user_data.get("selected_button")
        if not selected_button:
            await update.message.reply_text(
                "‚ùå *–û—à–∏–±–∫–∞*\n\n"
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_admin_keyboard()
            )
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
            for key in ["admin_state", "buttons_action", "selected_button"]:
                if key in context.user_data:
                    del context.user_data[key]
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∞–µ–º —Å–ª—É—á–∞–π "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
        new_button_name = selected_button if message_text == "–û—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" else message_text
        
        # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        context.user_data["new_button_name"] = new_button_name
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
        await update.message.reply_text(
            "‚úèÔ∏è *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏*\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏: *{new_button_name}*\n\n"
            "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É.\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ @TAG –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: \"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: @LTC_USD_BUY USD\"",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=ReplyKeyboardMarkup([
                ["üîÑ –û—Ç–º–µ–Ω–∞"]
            ], resize_keyboard=True)
        )
        context.user_data["admin_state"] = "edit_button_content"
    
    elif admin_state == "edit_button_content":
        if message_text == "üîÑ –û—Ç–º–µ–Ω–∞":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é –∫–Ω–æ–ø–æ–∫
            await update.message.reply_text(
                "üîÑ *–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ*\n\n"
                "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=ReplyKeyboardMarkup([
                    ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É", "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É"],
                    ["‚ùå –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É", "üîÑ –û—Ç–º–µ–Ω–∞"]
                ], resize_keyboard=True)
            )
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
            for key in ["admin_state", "buttons_action", "selected_button", "new_button_name"]:
                if key in context.user_data:
                    del context.user_data[key]
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        selected_button = context.user_data.get("selected_button")
        new_button_name = context.user_data.get("new_button_name")
        
        if not selected_button or not new_button_name:
            await update.message.reply_text(
                "‚ùå *–û—à–∏–±–∫–∞*\n\n"
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.",
                parse_mode=ParseMode.MARKDOWN,
                reply_markup=get_admin_keyboard()
            )
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
            for key in ["admin_state", "buttons_action", "selected_button", "new_button_name"]:
                if key in context.user_data:
                    del context.user_data[key]
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
        config = load_config()
        buttons_data = config.get("buttons", {"list": [], "content": {}})
        button_list = buttons_data.get("list", [])
        button_content = buttons_data.get("content", {})
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –µ—Å–ª–∏ –æ–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
        if selected_button != new_button_name:
            # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ä–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–æ–≤—É—é
            if selected_button in button_content:
                button_content[new_button_name] = button_content[selected_button]
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É
                del button_content[selected_button]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
            if selected_button in button_list:
                idx = button_list.index(selected_button)
                button_list[idx] = new_button_name
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        button_content[new_button_name] = message_text
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        buttons_data["list"] = button_list
        buttons_data["content"] = button_content
        config["buttons"] = buttons_data
        save_config(config)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        await update.message.reply_text(
            "‚úÖ *–ö–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!*\n\n"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: *{new_button_name}*\n"
            f"–¢–µ–∫—Å—Ç: {message_text}\n\n"
            "–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É.",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=get_admin_keyboard()
        )
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
        for key in ["admin_state", "buttons_action", "selected_button", "new_button_name"]:
            if key in context.user_data:
                del context.user_data[key]
    
    # –î—Ä—É–≥–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–¥–º–∏–Ω–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–¥–µ—Å—å


def register_common_handlers(app: Application) -> None:
    """Register common handlers available to all users"""
    # Help command
    app.add_handler(CommandHandler("help", help_command))
    
    # Add callback handlers first (they don't conflict with commands)
    app.add_handler(CallbackQueryHandler(handle_custom_button, pattern="^custom_button_"))
    app.add_handler(CallbackQueryHandler(handle_custom_back, pattern="^custom_back_"))
    app.add_handler(CallbackQueryHandler(handle_main_menu_callback, pattern="^go_main_menu$"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    app.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND, 
        handle_text_buttons
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–∞–º–∏ (—Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
    app.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.ChatType.PRIVATE,
        handle_admin_currency_message
    ), group=2)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    app.add_handler(MessageHandler(
        filters.Regex("^üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∏—Å—Å–∏–π$") & filters.ChatType.PRIVATE,
        handle_commission_button
    ), group=3)
    
    app.add_handler(MessageHandler(
        filters.Regex("^üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞$") & filters.ChatType.PRIVATE,
        handle_referral_system_button
    ), group=3)
    
    app.add_handler(MessageHandler(
        filters.Regex("^üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è$") & filters.ChatType.PRIVATE,
        handle_notification_settings_button
    ), group=3)
    
    app.add_handler(MessageHandler(
        filters.Regex("^üîÑ –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å$") & filters.ChatType.PRIVATE, 
        handle_admin_panel
    ), group=3)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    app.add_handler(MessageHandler(
        filters.Regex("^(‚úÖ|‚ùå) .*$") & filters.ChatType.PRIVATE,
        handle_notification_toggle
    ), group=3)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π (—Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º)
    app.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.ChatType.PRIVATE,
        handle_admin_message
    ), group=1)
    
    # Custom commands should be registered AFTER all other regular commands in the register_handlers function
    # This will be done in register_handlers after all other handlers are registered
